import pandas as pd
import os
import helper

helper.pandas_output_setting()
input_dir1 = "mainframe_flat_files"
input_dir2 = "Descriptions 2000-2016"
input_filename = 'Descriptions'
file_year = 2000
save_switch = True

# Mapping of character positions and column names
column_mapping = [
    (1, 4, "case_year"),
    (5, 12, "case_number"),
    (13, 15, "object_number"),
    (16, 18, "sequence_number"),
    (19, 26, "fatal_file_number"),
    (27, 27, "R3_COLL_COMPLETE_IND"),
    (28, 36, "batch_number"),
    (37, 40, "police_service_code"),
    (41, 55, "police_file_number"),
    (56, 65, "occurrence_date"),
    (56, 59, "occurrence_year"),
    (61, 62, "occurrence_month"),
    (66, 66, "occurrence_day_of_week"),
    (67, 74, "occurrence_time"),
    (75, 75, "in_near"),
    (76, 77, "municipality_type"),
    (78, 107, "municipality"),
    (108, 111, "on_highway"),
    (112, 112, "highway_legal_class"),
    (113, 116, "at_intersection_with_highway"),
    (117, 176, "on_street"),
    (177, 236, "at_intersection_with_street"),
    (237, 242, "not_at_intersection_distance"),
    (243, 244, "not_at_intersection_direction"),
    (245, 245, "not_at_intersection_km_metre"),
    (246, 255, "reported_to_police_date"),
    (256, 263, "reported_time"),
    (264, 264, "police_file_status"),
    (265, 268, "total_vehicles"),
    (269, 272, "total_injured"),
    (273, 276, "total_fatalities"),
    (277, 277, "hit_and_run"),
    (278, 278, "scene_visited_by_police"),
    (279, 280, "special_study"),
    (281, 281, "property_damage_over_1000"),
    (282, 290, "radius_of_curve"),
    (291, 330, "district"),
    (331, 331, "additional_witnesses_on_file"),
    (332, 341, "investigator"),
    (342, 347, "investigator_reg_no"),
    (348, 353, "approving_regimental_no"),
    (354, 363, "fatal_reported_date"),
    (364, 373, "engineer_notified_date"),
    (374, 383, "engineer_report_received_date"),
    (394, 387, "fatal_police_service_code"),
    (388, 391, "collision_type"),
    (392, 393, "vehicle_1_direction_of_travel"),
    (394, 395, "vehicle_2_direction_of_travel"),
    (396, 397, "vehicle_1_maneuver"),
    (398, 399, "vehicle_2_maneuver"),
    (400, 424, "not_at_intersection_reference_point_description"),
    (425, 484, "special_reference_location_description"),
    (485, 488, "highway_number"),
    (489, 491, "control_section"),
    (492, 494, "subsection"),
    (495, 502, "km_post"),
    (503, 513, "latitude"),
    (514, 524, "longitude"),
    (525, 538, "structure_ID"),
    (539, 544, "outside_shoulder_width"),
    (545, 551, "inside_shoulder_width"),
    (552, 559, "surface_width"),
    (560, 565, "median_width"),
    (566, 574, "aadt"),
    (575, 578, "aadt_year"),
    (579, 581, "speed_limit_day"),
    (582, 584, "speed_limit_night"),
    (585, 586, "highway_type"),
    (587, 588, "surface_type"),
    (589, 590, "shoulder_type"),
    (591, 591, "urban_rural"),
    (592, 651, "from_location_reference"),
    (652, 711, "to_location_reference"),
    (712, 713, "road_alignment_a"),
    (714, 715, "road_alignment_b"),
    (716, 717, "intersection_type"),
    (718, 719, "collision_severity"),
    (720, 721, "collision_location"),
    (722, 723, "primary_event"),
    (724, 725, "road_class"),
    (726, 727, "special_facility"),
    (728, 729, "collision_environmental_condition"),
    (730, 731, "collision_surface_condition"),
    (828, 852, "driver_surname"),
    (853, 867, "driver_first_name"),
    (868, 869, "driver_initial"),
    (870, 894, "driver_address"),
    (895, 896, "driver_municipality_type"),
    (897, 926, "driver_municipality"),
    (927, 936, "driver_postal_code"),
    (937, 938, "driver_province"),
    (939, 939, "driver_date_of_birth_indicator"),
    (940, 949, "driver_date_of_birth"),
    (950, 952, "driver_age"),
    (953, 953, "driver_sex"),
    (954, 956, "driver_home_phone_area_code"),
    (957, 963, "driver_home_phone"),
    (964, 966, "driver_work_phone_area_code"),
    (967, 973, "driver_work_number"),
    (974, 998, "driver_licence_number"),
    (999, 999, "valid_driver_licence"),
    (1000, 1000, "proper_driver_licence_class"),
    (1001, 1002, "province_of_licence"),
    (1003, 1004, "driver_special_study"),
    (1005, 1005, "object_is_person"),
    (1006, 1006, "object_is_vehicle"),
    (1007, 1007, "object_is_moving_vehicle"),
    (1008, 1009, "object_type"),
    (1010, 1011, "object_identification"),
    (1012, 1013, "attachments"),
    (1014, 1015, "light_condition_a"),
    (1016, 1017, "light_condition_b"),
    (1018, 1019, "contributing_road_condition"),
    (1020, 1021, "driver_action"),
    (1022, 1023, "dangerous_goods_class"),
    (1024, 1025, "driver_pedestrian_condition"),
    (1026, 1027, "load_details_a"),
    (1028, 1029, "load_details_b"),
    (1030, 1031, "point_of_impact_1"),
    (1032, 1033, "point_of_impact_2"),
    (1034, 1035, "point_of_impact_3"),
    (1036, 1037, "traffic_control_condition"),
    (1038, 1039, "traffic_control_device"),
    (1040, 1041, "pedestrian_action"),
    (1042, 1043, "trailer_type"),
    (1044, 1045, "unsafe_speed"),
    (1046, 1047, "vehicle_condition_contributing_factors"),
    (1048, 1049, "vehicle_repairable"),
    (1050, 1051, "environmental_condition"),
    (1052, 1053, "surface_condition"),
    (1054, 1057, "vehicle_year"),
    (1058, 1072, "vehicle_make"),
    (1073, 1087, "vehicle_model"),
    (1088, 1097, "vehicle_colour"),
    (1098, 1105, "licence_plate"),
    (1106, 1107, "province_of_plate"),
    (1108, 1124, "VIN"),
    (1125, 1133, "estimated_dollar_damage"),
    (1134, 1134, "vehicle_totalled"),
    (1135, 1135, "damage_sticker_issued"),
    (1136, 1160, "owner_surname"),
    (1161, 1175, "owner_first_name"),
    (1176, 1177, "owner_initial"),
    (1178, 1202, "owner_address"),
    (1203, 1204, "owner_municipality_type"),
    (1205, 1234, "owner_municipality"),
    (1235, 1244, "owner_postal_code"),
    (1245, 1246, "owner_province"),
    (1247, 1249, "owner_phone_area_code"),
    (1250, 1256, "owner_phone_number"),
    (1257, 1259, "owner_work_area_code"),
    (1260, 1266, "owner_work_phone_number"),
    (1267, 1311, "vehicle_leased_by"),
    (1312, 1356, "vehicle_insurance_co"),
    (1357, 1366, "insurance_expiry_date"),
    (1367, 1376, "insurance_policy_number"),
    (1377, 1380, "dangerous_goods_PIN"),
    (1381, 1382, "vehicle_special_study"),
    (1383, 1407, "surname"),
    (1408, 1422, "first_name"),
    (1423, 1424, "initial"),
    (1425, 1427, "age"),
    (1428, 1437, "date_of_birth"),
    (1438, 1438, "sex"),
    (1439, 1448, "date_of_death"),
    (1449, 1453, "time_of_death"),
    (1454, 1478, "address"),
    (1479, 1503, "city"),
    (1504, 1505, "province"),
    (1506, 1515, "postal_code"),
    (1516, 1517, "ejected"),
    (1518, 1519, "injury_severity"),
    (1520, 1521, "position_in_vehicle"),
    (1522, 1523, "safety_equipment_used"),
]

# Create a list of dictionaries
data_list = []
input_file_path = os.path.join(input_dir1, input_dir2, f"{input_filename} {file_year}")

# Read the flat file and populate the list
with open(input_file_path, 'r') as file:
    for line in file:
        data = {}
        for start, end, col_name in column_mapping:
            data[col_name] = line[start-1:end].strip()
        data_list.append(data)

# Create DataFrame from the list of dictionaries
df = pd.DataFrame(data_list)

# Display the resulting DataFrame
print(df.tail(10))

if save_switch:
    df.to_csv(f'mainframe_extract_{input_filename.lower()}_{file_year}.csv', index=False)