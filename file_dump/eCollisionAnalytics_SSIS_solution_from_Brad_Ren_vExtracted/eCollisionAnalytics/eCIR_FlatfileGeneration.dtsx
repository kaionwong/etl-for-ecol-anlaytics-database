<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="12/22/2014 8:25:56 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="D-730548"
  DTS:CreatorName="GOA\martin.jongerius"
  DTS:DTSID="{1C854D4B-02E4-47E1-B8E6-078549EEEF48}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.2000.150"
  DTS:LocaleID="1033"
  DTS:ObjectName="eCIR_FlatfileGeneration"
  DTS:PackageType="5"
  DTS:VersionBuild="324"
  DTS:VersionGUID="{9920C10D-B87A-4984-80DE-2E1D6A0EEFC8}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{4DF91168-FC39-40C4-B406-F147A915FAA4}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="FlatFileId">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{4A29FD24-8E6F-4E28-8D60-021031869020}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="NewFileVersion">
      <DTS:VariableValue
        DTS:DataType="3">5</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{962C9362-8AF8-419B-A5BD-5277D8B1ED47}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="ReportYear">
      <DTS:VariableValue
        DTS:DataType="3">2016</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Flat Files done, but with error"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{D1B51BCE-1D1A-4FE8-B123-A0B252BC5180}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Flat Files done, but with error">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Flat Files done, but with error\Get next file version number for flat file year"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{81c306d6-f231-4ed6-b0cb-3fb7a8692e4a}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Get next file version number for flat file year"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{67DF6BBB-0440-40D8-A8AB-57E8A7F0CBF4}"
              SQLTask:SqlStatementSource="update ecir.ci_current_flatfile_year&#xA;set InProgressFlag = 0,&#xA;ProcessStep=99&#xA;where YearId = 1" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Sequence Container"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{65948271-7A15-4BFE-98DC-216E8379996C}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Sequence Container">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Sequence Container\Determine what the year is we need to generate for"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:DTSID="{71cf0549-9de4-4e2a-b630-c964fb18e172}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="-1"
          DTS:ObjectName="Determine what the year is we need to generate for">
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Sequence Container\Determine what the year is we need to generate for\Get Flat File year value"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{90dfe985-43a0-467c-a9a7-01fa65070111}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Get Flat File year value"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{67DF6BBB-0440-40D8-A8AB-57E8A7F0CBF4}"
                  SQLTask:SqlStatementSource="Select cast(flatfileyear as int) as ReportYear&#xA;From eCIR.CI_Current_Flatfile_Year&#xA;Where yearid=1"
                  SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ResultBinding
                    SQLTask:ResultName="0"
                    SQLTask:DtsVariableName="User::ReportYear" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Sequence Container\Determine what the year is we need to generate for\Get next file version number for flat file year"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{5ffd844b-deb8-44ab-afc4-cd198621cf74}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Get next file version number for flat file year"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{67DF6BBB-0440-40D8-A8AB-57E8A7F0CBF4}"
                  SQLTask:SqlStatementSource="SELECT top 1 &#xA;cast((isnull(max(fileversion), 0)+1) as integer) as NewFileVersion&#xA;from ecir.ci_current_flatfile_year ff&#xA;left outer join eCIR.flat_files_repo ffr on ff.FlatfileYear=ffr.year"
                  SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ResultBinding
                    SQLTask:ResultName="0"
                    SQLTask:DtsVariableName="User::NewFileVersion" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Sequence Container\Determine what the year is we need to generate for.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{2c3f2375-2d57-45cb-bf54-436fcaec0a7d}"
              DTS:From="Package\Sequence Container\Determine what the year is we need to generate for\Get Flat File year value"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\Sequence Container\Determine what the year is we need to generate for\Get next file version number for flat file year" />
          </DTS:PrecedenceConstraints>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Sequence Container\Flat Files done"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:DTSID="{9945748e-bffa-475d-9fbb-d3fdb3a08325}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="-1"
          DTS:ObjectName="Flat Files done">
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Sequence Container\Flat Files done\Get next file version number for flat file year"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{88c3fdbe-4f69-4e63-98bb-771e91b4b7b8}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Get next file version number for flat file year"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{67DF6BBB-0440-40D8-A8AB-57E8A7F0CBF4}"
                  SQLTask:SqlStatementSource="update ecir.ci_current_flatfile_year&#xA;set InProgressFlag = 0, ProcessStep=0&#xA;where YearId = 1" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Sequence Container\Generate All Involved Description"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:DTSID="{2665772e-63ad-4943-8657-be6ae810a54b}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="-1"
          DTS:ObjectName="Generate All Involved Description">
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Sequence Container\Generate All Involved Description\Generate FLAT_FILES_REPO entry"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{2b8ef526-ef82-4632-ad9b-03aaedc47ea3}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Generate FLAT_FILES_REPO entry"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="1">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{67DF6BBB-0440-40D8-A8AB-57E8A7F0CBF4}"
                  SQLTask:SqlStatementSource="insert into eCIR.flat_files_repo&#xA;(year, name, type, CreatedDate, FileVersion, Status, CreatedBy)&#xA;VALUES(@useReportYear, '9_AllInvolvedInformationFile.txt', 'AllInvolvedInformation', getDate(), @useNewFileVersion,'Complete',(select username from eCIR.CI_Current_Flatfile_Year where YearId=1))&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="@useReportYear"
                    SQLTask:DtsVariableName="User::ReportYear"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="11"
                    SQLTask:ParameterSize="4" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="@useNewFileVersion"
                    SQLTask:DtsVariableName="User::NewFileVersion"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="11"
                    SQLTask:ParameterSize="4" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Sequence Container\Generate All Involved Description\Get flatFileId"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:Disabled="True"
              DTS:DTSID="{6ede3fad-bb10-47b0-b731-3182893aa960}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Get flatFileId"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{67DF6BBB-0440-40D8-A8AB-57E8A7F0CBF4}"
                  SQLTask:SqlStatementSource="SELECT cast(flatfileid as integer) as FlatFileId&#xA;from eCIR.flat_files_repo&#xA;where year=@useReportYear&#xA;and FileVersion = @useNewFileVersion&#xA;and type='CollisionExtract'"
                  SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ResultBinding
                    SQLTask:ResultName="0"
                    SQLTask:DtsVariableName="User::FlatFileId" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="@useReportYear"
                    SQLTask:DtsVariableName="User::ReportYear"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="11"
                    SQLTask:ParameterSize="4" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="@useNewFileVersion"
                    SQLTask:DtsVariableName="User::NewFileVersion"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="11"
                    SQLTask:ParameterSize="4" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Sequence Container\Generate All Involved Description\Insert flat file records into flat file content table"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:Disabled="True"
              DTS:DTSID="{ad83e6f0-6530-499b-95e3-e29455533cb7}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Insert flat file records into flat file content table"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="2">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{67DF6BBB-0440-40D8-A8AB-57E8A7F0CBF4}"
                  SQLTask:SqlStatementSource="insert into ecir.FLAT_FILES_REPO_CONTENTS&#xA;(FLATFILEREPO_ID, case_year, case_nbr,content)&#xA;select&#xA;--top 100&#xA;(select max(ffr.FlatFileId) from ecir.FLAT_FILES_REPO ffr) as flatfileid,&#xA;col.case_year,&#xA;eCIR.fnPadText(col.CASE_NBR, ' ', 8, 0),&#xA;--cast(col.CASE_YEAR as varchar(4)) +&#xA;--eCIR.fnPadText(col.CASE_NBR, ' ', 8, 0) +&#xA;eCIR.fnPadText(' ', ' ', 6, 0) +&#xA;eCIR.fnPadText(col.FF_NBR, ' ', 8, 1) +&#xA;eCIR.fnPadText(col.COMPLETE_INDICATOR, ' ', 1, 1) +&#xA;eCIR.fnPadText(col.BATCH_NUMBER, ' ' , 9, 1) +&#xA;eCIR.fnPadText(col.POLICE_SERVICE_CODE, ' ', 4, 0) +&#xA;eCIR.fnPadText(col.PFN_FILE_NBR, ' ', 15, 0) +&#xA;--case eCIR.fnIsDateNull(col.OCCURENCE_TIMESTAMP)&#xA;--when 1 then eCIR.fnPadText('        ', ' ', 19, 0)&#xA;--else cast(datepart(yyyy,col.OCCURENCE_TIMESTAMP)as varchar(4))+'/'+eCIR.fnPadText(cast(datepart(mm,col.OCCURENCE_TIMESTAMP) as varchar(2)),'0',2,1)+'/'+eCIR.fnPadText(cast(datepart(dd,col.OCCURENCE_TIMESTAMP) as varchar(2)),'0',2,1) +&#xA;eCIR.fnPadText(col.OCCURENCE_TIMESTRING, ' ', 10, 0) +&#xA;case len(isnull(col.OCCURENCE_TIMESTRING, ''))&#xA;when 0 then cast(datepart(dw,col.OCCURENCE_TIMESTAMP) as varchar(1))&#xA;else &#xA;case PATINDEX('/99',right(col.OCCURENCE_TIMESTRING,3))&#xA;when 0 then cast(datepart(dw,col.OCCURENCE_TIMESTAMP) as varchar(1))&#xA;else '0' end&#xA;end +&#xA;ecir.fnGetTimeStr(col.OCCURENCE_TIMESTAMP) +&#xA;case isnull(col.LOC_IN_CITY_FLAG,1) when 1 then '1' else '2' end +&#xA;eCIR.fnPadText(col.MUNICIPALITY_TYPE, ' ', 2, 1) +&#xA;eCIR.fnPadText(col.LOC_DESC, ' ', 30, 0) +&#xA;case PATINDEX('%[A-Z]',col.LOC_HWY_NBR)&#xA;when 0 then replace(eCIR.fnPadText(eCIR.fnPadText(col.LOC_HWY_NBR, '0', 3, 1), ' ', 4, 0), '000', '   ')&#xA;else eCIR.fnPadText(col.LOC_HWY_NBR, '0', 4, 1) end +&#xA;isnull(col.LEGAL_CLASSIFICATION, ' ') + &#xA;case len(ltrim(isnull(col.LOC_INT_HWY_NBR, '')))&#xA;when 0 then '    '&#xA;else&#xA;case PATINDEX('%[A-Z]',col.LOC_INT_HWY_NBR)&#xA;when 0 then eCIR.fnPadText(eCIR.fnPadText(col.LOC_INT_HWY_NBR, '0', 3, 1), ' ', 4, 0)&#xA;else eCIR.fnPadText(col.LOC_INT_HWY_NBR, '0', 4, 1) end&#xA;end +&#xA;eCIR.fnPadText(col.LOC_STREET_AVE, ' ', 60, 0) +&#xA;eCIR.fnPadText(col.LOC_INT_STREET_AVE, ' ', 60, 0) +&#xA;case isnull(col.LOC_DISTANCE_KM_FLAG , 9) when 9 then '      '&#xA;else eCIR.fnPadText(cast(col.LOC_DISTANCE as varchar(10)), '0', 6, 1) end +&#xA;case isnull(col.LOC_DISTANCE_KM_FLAG , 9) when 9 then '  '&#xA;else &#xA;case isnull(col.LOC_NORTH_FLAG, 0) when 1 &#xA;then &#xA;&#xA;case isnull(col.LOC_EAST_FLAG, 0) when 1 then 'NE' else&#xA;case isnull(col.LOC_WEST_FLAG, 0) when 1 then 'NW' else 'N 'end end&#xA;&#xA;else &#xA;case isnull(col.LOC_SOUTH_FLAG, 0) when 1 then  &#xA;&#xA;case isnull(col.LOC_EAST_FLAG, 0) when 1 then 'SE' else&#xA;case isnull(col.LOC_WEST_FLAG, 0) when 1 then 'SW' else 'S 'end end&#xA;else&#xA;case isnull(col.LOC_EAST_FLAG, 0) when 1 then 'E ' else &#xA;case isnull(col.LOC_WEST_FLAG, 0) when 1 then 'W ' else '  '&#xA;end&#xA;end&#xA;end&#xA;end&#xA;end +&#xA;case isnull(col.LOC_DISTANCE_KM_FLAG , 9) when 9 then ' '&#xA;else &#xA;case isnull(col.LOC_DISTANCE_KM_FLAG,0) when 1 then 'K' else 'M' end&#xA;end + &#xA;case eCIR.fnIsDateNull(col.REPORTED_TIMESTAMP)&#xA;when 1 then eCIR.fnPadText('     ', ' ', 18,0)&#xA;else cast(datepart(yyyy,col.REPORTED_TIMESTAMP)as varchar(4))+'/'+eCIR.fnPadText(cast(datepart(mm,col.REPORTED_TIMESTAMP) as varchar(2)),'0',2,1)+'/'+eCIR.fnPadText(cast(datepart(dd,col.REPORTED_TIMESTAMP) as varchar(2)),'0',2,1) +&#xA;ecir.fnGetTimeStr(col.REPORTED_TIMESTAMP) end +&#xA;eCIR.fnGetCodeValueCode(col.FILE_STATUS_ID) +&#xA;eCIR.fnPadText(col.VEHICLES_NBR,'0',4,1)+&#xA;eCIR.fnPadText(col.INJURED_NBR,'0',4,1)+&#xA;eCIR.fnPadText(col.FATALITIES_NBR,'0',4,1)+&#xA;case isnull(col.HIT_AND_RUN_FLAG, -1) when -1 then ' ' when 1 then '1' else '2' end +&#xA;case isnull(col.SCENE_VISITED_FLAG, -1) when -1 then ' ' when 1 then '1' else '2' end +&#xA;'  ' + -- Special study blank for now&#xA;eCIR.fnPadText(col.PROP_DAMAGE_ONLY,'0',1,1) +&#xA;case isnull((select 1 from tims.CI_Roads_Less500_Vw where roadname = col.LOC_HWY_NBR), 0)&#xA;when 1 then &#xA;case isnull(col.RADIUS_OF_CURVE, 'x') when 'x' then eCIR.fnPadText('',' ',9,0) end&#xA;else replace(eCIR.fnPadText(col.RADIUS_OF_CURVE,'0',9,1), '000000000', '         ') end +&#xA;eCIR.fnPadText(col.DISTRICT_NAME,' ',40,0)+&#xA;isnull(col.ADDL_WITNESS, ' ') +&#xA;eCIR.fnPadText(col.UNIT_NBR,' ',10,0) +&#xA;case isnull(col.INV_REG_NBR, -1)&#xA;when -1 then '      '&#xA;when 0 then '      '&#xA;else eCIR.fnPadText(col.INV_REG_NBR,'0',6,1) end +&#xA;case isnull(col.APPROVER_REG_NBR, '-1')&#xA;when '-1' then '      '&#xA;when '0' then '      '&#xA;else replace(eCIR.fnPadText(col.APPROVER_REG_NBR,'0',6,1),'000000', '      ') end +&#xA;isnull(cast(datepart(yyyy,col.FATAL_REPORT_DATE)as varchar(4))+'/'+eCIR.fnPadText(cast(datepart(mm,col.FATAL_REPORT_DATE) as varchar(2)),'0',2,1)+'/'+eCIR.fnPadText(cast(datepart(dd,col.FATAL_REPORT_DATE) as varchar(2)),'0',2,1), '          ') +&#xA;isnull(cast(datepart(yyyy,col.ENG_NOTIFIED_DATE)as varchar(4))+'/'+eCIR.fnPadText(cast(datepart(mm,col.ENG_NOTIFIED_DATE) as varchar(2)),'0',2,1)+'/'+eCIR.fnPadText(cast(datepart(dd,col.ENG_NOTIFIED_DATE) as varchar(2)),'0',2,1), '          ') +&#xA;isnull(cast(datepart(yyyy,col.ENG_REPORT_DATE)as varchar(4))+'/'+eCIR.fnPadText(cast(datepart(mm,col.ENG_REPORT_DATE) as varchar(2)),'0',2,1)+'/'+eCIR.fnPadText(cast(datepart(dd,col.ENG_REPORT_DATE) as varchar(2)),'0',2,1), '          ') +&#xA;replace(eCIR.fnPadText(col.FATAL_POL_RCMP_CODE, '0', 4, 1), '0000', '    ') +&#xA;replace(eCIR.fnPadText(isnull(eCIR.fnGetCodeValueCode(plot.COLLISION_SUB_TYPE_ID), '0000'), '0', 4, 1), '0000', '    ') +&#xA;replace(eCIR.fnPadText(eCIR.fnGetCodeValueCode(plot.VEHICLE_DIRECTION_ID), '0', 2, 1),'00', '  ') +&#xA;replace(eCIR.fnPadText(eCIR.fnGetCodeValueCode(plot.VEHICLE2_DIRECTION_ID), '0', 2, 1), '00', '  ') +&#xA;replace(eCIR.fnPadText(eCIR.fnGetCodeValueCode(plot.VEHICLE_MANUVER_ID), '0', 2, 1), '00', '  ') +&#xA;replace(eCIR.fnPadText(eCIR.fnGetCodeValueCode(plot.VEHICLE2_MANUVER_ID), '0', 2, 1), '00', '  ') +&#xA;eCIR.fnPadText(col.LOC_REF_STREET_AVE, ' ', 25, 0)+&#xA;replace(eCIR.fnPadText(col.LOC_REF_SPECIAL_DESC, ' ', 60, 0), '&quot;', '''') +&#xA;case isnull(plot.HIGHWAY, '~')&#xA;when '~' then '    ' else&#xA;case PATINDEX('%[A-Z]',plot.HIGHWAY)&#xA;when 0 then eCIR.fnPadText(replace(eCIR.fnPadText(plot.HIGHWAY, '0', 3, 1),'000', ' '), ' ', 4, 0)&#xA;else eCIR.fnPadText(plot.HIGHWAY, '0', 4, 1) end end +&#xA;case isnull(plot.CONTROL_SECTION, -1) when -1 then '   '&#xA;else eCIR.fnPadText(plot.CONTROL_SECTION,'0',3,1) end +&#xA;case isnull(plot.SAFETY_SUB_SECTION, -1) when -1 then '   '&#xA;else eCIR.fnPadText(plot.SAFETY_SUB_SECTION,'0',3,1) end +&#xA;replace(eCIR.fnPadText(cast(plot.KM_POST as varchar),'0',7,1) + '0','00000000', '        ')  +&#xA;eCIR.fnGetLatLongStr(col.LOC_GPS_LAT) +&#xA;eCIR.fnGetLatLongStr(col.LOC_GPS_LONG) +&#xA;eCIR.fnPadText(plot.STRUCTURE_ID, ' ', 14, 0) +&#xA;replace(eCIR.fnPadText(cast(plot.OT_SHOULDER_WIDTH as varchar), '0', 6,1),'000000', '      ') +&#xA;replace(eCIR.fnPadText(cast(plot.IN_SHOULDER_WIDTH as varchar), '0', 7,1),'0000000', '       ') +&#xA;replace(eCIR.fnPadText(cast(plot.SURFACE_WIDTH as varchar), '0', 8,1),'00000000', '        ') +&#xA;replace(eCIR.fnPadText(cast(plot.MEDIAN_WIDTH as varchar), '0', 6,1),'000000', '      ') +&#xA;replace(eCIR.fnPadText(plot.AADT, '0', 9,1),'000000000', '         ') +&#xA;replace(eCIR.fnPadText(plot.AADT_YEAR, '0', 4,1),'0000', '    ') +&#xA;replace(eCIR.fnPadText(plot.SPEED_DAY, '0', 3,1),'000', '   ') +&#xA;replace(eCIR.fnPadText(plot.SPEED_NIGHT, '0', 3,1),'000', '   ') +&#xA;replace(eCIR.fnPadText(plot.HWY_TYPE, ' ', 2, 0),'00', '  ') + &#xA;replace(eCIR.fnPadText(plot.ROAD_SURFACE_TYPE, ' ', 2, 0),'00', '  ') + &#xA;replace(eCIR.fnPadText(plot.SHLDR_SURFACE_TYPE, ' ', 2, 0),'00', '  ') + &#xA;isnull(plot.URBAN_RURAL, ' ') +&#xA;eCIR.fnPadText(plot.FROM_LOCATION, ' ', 60, 0) +&#xA;eCIR.fnPadText(plot.TO_LOCATION, ' ', 60, 0) +&#xA;case isnull(col.ROAD_ALIGNMENT_A_ID, -9999)&#xA;when -9999 then '  '&#xA;else eCIR.fnPadText(eCIR.fnGetCodeValueCode(col.ROAD_ALIGNMENT_A_ID), '0', 2, 1) end +&#xA;case isnull(col.ROAD_ALIGNMENT_B_ID, -9999)&#xA;when -9999 then '  '&#xA;else eCIR.fnPadText(eCIR.fnGetCodeValueCode(col.ROAD_ALIGNMENT_B_ID), '0', 2, 1) end +&#xA;replace(eCIR.fnPadText(eCIR.fnGetCodeValueCode(plot.INTERSECTION_TYPE_ID), '0', 2, 1), '00', '  ') +&#xA;replace(eCIR.fnPadText(eCIR.fnGetCodeValueCode(col.SEVERITY_OF_COLLISION_ID), '0', 2, 1), '00', '  ') +&#xA;replace(eCIR.fnPadText(eCIR.fnGetCodeValueCode(col.COLLISION_LOCATION_ID), '0', 2, 1), '00', '  ') +&#xA;replace(eCIR.fnPadText(eCIR.fnGetCodeValueCode(col.PRIMARY_EVENT_ID), '0', 2, 1), '00', '  ') +&#xA;replace(eCIR.fnPadText(eCIR.fnGetCodeValueCode(col.ROAD_CLASS_ID), '0', 2, 1), '00', '  ') +&#xA;replace(eCIR.fnPadText(eCIR.fnGetCodeValueCode(col.SPECIAL_FACILITY_ID), '0', 2, 1), '00', '  ') +&#xA;replace(eCIR.fnPadText(eCIR.fnGetCodeValueCode(col.ENVIRONMENTAL_CONDITION_ID), '0', 2, 1), '00', '  ') +&#xA;replace(eCIR.fnPadText(eCIR.fnGetCodeValueCode(col.SURFACE_COND_ID), '0', 2, 1), '00', '  ') +&#xA;eCIR.fnPadText('                                                                                          ', ' ', 96, 0)&#xA;&#xA;from ecrdba.collisions col &#xA;left outer join ECRDBA.ECR_COLL_PLOTTING_INFO plot on col.id = plot.COLLISION_ID,&#xA;ecir.ci_current_flatfile_year ff&#xA;where ff.YearId = 1 and ff.InProgressFlag = 1&#xA;and col.CASE_YEAR = ff.FlatfileYear&#xA;order by col.ID desc&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Sequence Container\Generate All Involved Description\Update FLAT_FILES_REPO entry as Complete"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:Disabled="True"
              DTS:DTSID="{6e538ef1-91dd-4199-a6eb-08f085b23eab}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Update FLAT_FILES_REPO entry as Complete"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="3">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{67DF6BBB-0440-40D8-A8AB-57E8A7F0CBF4}"
                  SQLTask:SqlStatementSource="update eCIR.flat_files_repo&#xA;set status='Complete'&#xA;where year=@useReportYear and fileversion=@useNewFileVersion&#xA;and type='CollisionExtract'" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="@useReportYear"
                    SQLTask:DtsVariableName="User::ReportYear"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="11"
                    SQLTask:ParameterSize="4" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="@useNewFileVersion"
                    SQLTask:DtsVariableName="User::NewFileVersion"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="11"
                    SQLTask:ParameterSize="4" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Sequence Container\Generate AllInvolved Extract"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:DTSID="{e637d132-c6eb-41d2-9288-d2cd5b009359}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="-1"
          DTS:ObjectName="Generate AllInvolved Extract">
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Sequence Container\Generate AllInvolved Extract\Generate FLAT_FILES_REPO entry"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{830c3db8-ab92-414e-af5d-b6790a07068b}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Generate FLAT_FILES_REPO entry"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{67DF6BBB-0440-40D8-A8AB-57E8A7F0CBF4}"
                  SQLTask:SqlStatementSource="Insert Into eCIR.flat_files_repo(year, name, type, CreatedDate, FileVersion, Status,CreatedBy)&#xA;Values(@useReportYear, '2_AllInvolvedExtract.txt', 'AllInvolvedExtract', getDate(), @useNewFileVersion,'Pending',(select username from eCIR.CI_Current_Flatfile_Year where YearId=1))&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="@useReportYear"
                    SQLTask:DtsVariableName="User::ReportYear"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="11"
                    SQLTask:ParameterSize="4" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="@useNewFileVersion"
                    SQLTask:DtsVariableName="User::NewFileVersion"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="11"
                    SQLTask:ParameterSize="4" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Sequence Container\Generate AllInvolved Extract\Get flatFileId"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{f154b005-f874-464d-bb1f-28f922c4d5ed}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Get flatFileId"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{67DF6BBB-0440-40D8-A8AB-57E8A7F0CBF4}"
                  SQLTask:SqlStatementSource="SELECT cast(flatfileid as integer) as FlatFileId&#xA;from eCIR.flat_files_repo&#xA;where year=@useReportYear&#xA;and FileVersion = @useNewFileVersion&#xA;and type='AllInvolvedExtract'"
                  SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ResultBinding
                    SQLTask:ResultName="0"
                    SQLTask:DtsVariableName="User::FlatFileId" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="@useReportYear"
                    SQLTask:DtsVariableName="User::ReportYear"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="11"
                    SQLTask:ParameterSize="4" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="@useNewFileVersion"
                    SQLTask:DtsVariableName="User::NewFileVersion"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="11"
                    SQLTask:ParameterSize="4" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Sequence Container\Generate AllInvolved Extract\Insert flat file records into flat file content table 2"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{1211361a-22c1-4984-8977-decf458fb7fd}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Insert flat file records into flat file content table 2"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{67DF6BBB-0440-40D8-A8AB-57E8A7F0CBF4}"
                  SQLTask:SqlStatementSource="insert into ecir.FLAT_FILES_REPO_CONTENTS&#xA;(FLATFILEREPO_ID, case_year, case_nbr,seq_nbr,sub_seq_nbr,content)&#xA;select&#xA;(select max(ffr.FlatFileId) from ecir.FLAT_FILES_REPO ffr) as flatfileid,&#xA;col.CASE_YEAR,&#xA;eCIR.fnPadText(col.CASE_NBR, ' ', 8, 0),&#xA;--eCIR.fnPadNumber(obj.SEQ_NBR, '0', 3, 1),&#xA;eCIR.fnGetACISSequence(col.CASE_YEAR,isnull(obj.SEQ_NBR, tmp.OBJ_NUMBER), obj.PARENT_OBJECT_ID),&#xA;--eCIR.fnPadNumber(obj.SUB_SEQ_NBR, '0', 3, 1),&#xA;eCIR.fnGetACISSubSequence(col.CASE_YEAR,isnull(obj.SEQ_NBR, tmp.OBJ_NUMBER),isnull(obj.SUB_SEQ_NBR,tmp.SEQ_NUMBER), obj.PARENT_OBJECT_ID),&#xA;case when col.id &lt; 0 then&#xA;-- Use data from ECRDBA.HISTORICAL_ALL_INVOLVED for historical records&#xA;-- as name info can be different&#xA;eCIR.fnPadText(tmp.LAST_NAME, ' ', 25, 0) +&#xA;eCIR.fnPadText(tmp.FIRST_NAME, ' ', 15, 0) +&#xA;replace(eCIR.fnPadText(tmp.MIDDLE_NAME, ' ', 2, 0),'&quot;', '''') +&#xA;replace(eCIR.fnPadNumber(tmp.AGE, '0', 3, 1), '000', '   ') +&#xA;case &#xA;when tmp.dob is null then eCIR.fnPadText(' ', ' ', 10, 0)&#xA;else (eCIR.fnPadText(cast(datepart(yyyy,tmp.DOB)as varchar(4)),'0',4,1)+'/'+eCIR.fnPadText(cast(datepart(mm,tmp.DOB) as varchar(2)),'0',2,1)+'/'+eCIR.fnPadText(cast(datepart(dd,tmp.DOB) as varchar(2)),'0',2,1)) end +&#xA;case tmp.MALE_FLAG&#xA;when 1 then 'M'&#xA;when 2 then 'F'&#xA;when 4 then 'O'&#xA;else 'U' end +&#xA;case &#xA;when tmp.DEATH_TIMESTAMP is null then eCIR.fnPadText(' ', ' ', 10, 0)&#xA;else (eCIR.fnPadText(cast(datepart(yyyy,tmp.DEATH_TIMESTAMP)as varchar(4)),'0',4,1)+'/'+eCIR.fnPadText(cast(datepart(mm,tmp.DEATH_TIMESTAMP) as varchar(2)),'0',2,1)+'/'+eCIR.fnPadText(cast(datepart(dd,tmp.DEATH_TIMESTAMP) as varchar(2)),'0',2,1)) end +&#xA;case &#xA;when isnull(cast(datepart(hh,tmp.death_timestamp) as varchar(2)), '^')='^' then '     '&#xA;when cast(datepart(hh,tmp.death_timestamp)as varchar(2))+'.'+ cast(datepart(mi,tmp.death_timestamp)as varchar(2)) = '0.0' then '     '&#xA;else replace(eCIR.fnPadNumber(cast(datepart(hh,tmp.death_timestamp)as varchar(2)),'0',2,1)+'.'+ eCIR.fnPadNumber(cast(datepart(mi,tmp.death_timestamp)as varchar(2)),'0',2,1) ,'00.00', '00.01') end +&#xA;eCIR.fnPadText(tmp.ADDRESS, ' ', 25, 0) +&#xA;eCIR.fnPadText(tmp.CITY, ' ', 25, 0) +&#xA;eCIR.fnPadText(tmp.PROVINCE, ' ', 2, 0) +&#xA;eCIR.fnPadText(tmp.POSTAL_CODE, ' ', 10, 0) +&#xA;case isnull(cast(tmp.EJECTION_TYPE_ID as varchar(4)), '^')&#xA;when '^' then '  ' else eCIR.fnPadNumber(eCIR.fnGetCodeValueCode(tmp.EJECTION_TYPE_ID), '0', 2, 1) end +&#xA;case isnull(cast(tmp.INJURY_SEVERITY_ID as varchar(4)), '^')&#xA;when '^' then '  ' else eCIR.fnPadNumber(eCIR.fnGetCodeValueCode(tmp.INJURY_SEVERITY_ID), '0', 2, 1) end +&#xA;case isnull(cast(tmp.POSITION_IN_VEHICLE_ID as varchar(4)), '^')&#xA;when '^' then '  ' else eCIR.fnPadNumber(eCIR.fnGetCodeValueCode(tmp.POSITION_IN_VEHICLE_ID), '0', 2, 1) end +&#xA;case isnull(cast(tmp.SAFETY_EQUIPMENT_ID as varchar(4)), '^')&#xA;when '^' then '  ' else eCIR.fnPadNumber(eCIR.fnGetCodeValueCode(tmp.SAFETY_EQUIPMENT_ID), '0', 2, 1) end&#xA;-- End of ECRDBA.HISTORICAL_ALL_INVOLVED&#xA;else&#xA;-- Use data from proper eCollision for non-historical records&#xA;eCIR.fnPadText(party.LAST_NAME, ' ', 25, 0) +&#xA;eCIR.fnPadText(party.FIRST_NAME, ' ', 15, 0) +&#xA;replace(eCIR.fnPadText(party.MIDDLE_NAME, ' ', 2, 0),'&quot;', '''') +&#xA;eCIR.fnPadNumber(isnull(party.AGE,999), '0', 3, 1) +&#xA;case &#xA;when party.dob is null then eCIR.fnPadText(' ', ' ', 10, 0)&#xA;else (cast(datepart(yyyy,party.DOB)as varchar(4))+'/'+eCIR.fnPadText(cast(datepart(mm,party.DOB) as varchar(2)),'0',2,1)+'/'+eCIR.fnPadText(cast(datepart(dd,party.DOB) as varchar(2)),'0',2,1)) end +&#xA;case isnull(party.MALE_FLAG,3)&#xA;when 1 then 'M'&#xA;when 2 then 'F'&#xA;when 4 then 'O'&#xA;else 'U' end +&#xA;case &#xA;when party.DEATH_TIMESTAMP is null then eCIR.fnPadText(' ', ' ', 10, 0)&#xA;else (eCIR.fnPadText(cast(datepart(yyyy,party.DEATH_TIMESTAMP)as varchar(4)),'0',4,1)+'/'+eCIR.fnPadText(cast(datepart(mm,party.DEATH_TIMESTAMP) as varchar(2)),'0',2,1)+'/'+eCIR.fnPadText(cast(datepart(dd,party.DEATH_TIMESTAMP) as varchar(2)),'0',2,1)) end +&#xA;case &#xA;when isnull(cast(datepart(hh,party.death_timestamp) as varchar(2)), '^')='^' then '     '&#xA;when cast(datepart(hh,party.death_timestamp)as varchar(2))+'.'+ cast(datepart(mi,party.death_timestamp)as varchar(2)) = '0.0' then '     '&#xA;else replace(eCIR.fnPadNumber(cast(datepart(hh,party.death_timestamp)as varchar(2)),'0',2,1)+'.'+ eCIR.fnPadNumber(cast(datepart(mi,party.death_timestamp)as varchar(2)),'0',2,1),'00.00', '00.01') end +&#xA;eCIR.fnPadText(party.ADDRESS, ' ', 25, 0) +&#xA;eCIR.fnPadText(party.CITY, ' ', 25, 0) +&#xA;eCIR.fnPadText(party.PROVINCE, ' ', 2, 0) +&#xA;eCIR.fnPadText(party.POSTAL_CODE, ' ', 10, 0) +&#xA;case isnull(cast(party.EJECTION_TYPE_ID as varchar(4)), '^')&#xA;when '^' then '  ' else eCIR.fnPadNumber(eCIR.fnGetCodeValueCode(party.EJECTION_TYPE_ID), '0', 2, 1) end +&#xA;case isnull(cast(party.INJURY_SEVERITY_ID as varchar(4)), '^')&#xA;when '^' then '  ' else eCIR.fnPadNumber(eCIR.fnGetCodeValueCode(party.INJURY_SEVERITY_ID), '0', 2, 1) end +&#xA;case isnull(cast(party.POSITION_IN_VEHICLE_ID as varchar(4)), '^')&#xA;when '^' then '  ' else eCIR.fnPadNumber(eCIR.fnGetCodeValueCode(party.POSITION_IN_VEHICLE_ID), '0', 2, 1) end +&#xA;case isnull(cast(party.SAFETY_EQUIPMENT_ID as varchar(4)), '^')&#xA;when '^' then '  ' else eCIR.fnPadNumber(eCIR.fnGetCodeValueCode(party.SAFETY_EQUIPMENT_ID), '0', 2, 1) end&#xA;end&#xA;from ecrdba.collisions col &#xA;left outer join ECRDBA.HISTORICAL_ALL_INVOLVED tmp on (col.case_year = tmp.case_year  and col.case_nbr = tmp.case_no COLLATE SQL_Latin1_General_CP850_CI_AS)&#xA;--left outer join ecrdba.cl_objects obj on (col.id = obj.COLLISION_ID and tmp.OBJ_NUMBER = obj.seq_nbr and tmp.SEQ_NUMBER = obj.sub_seq_nbr)&#xA;left outer join ecrdba.cl_objects obj on (col.id = obj.COLLISION_ID and obj.PARTY_ID is not null and (tmp.OBJ_NUMBER is null or (tmp.OBJ_NUMBER is not null and tmp.OBJ_NUMBER = obj.seq_nbr and tmp.SEQ_NUMBER = obj.sub_seq_nbr)))&#xA;left outer join ecrdba.CLOBJ_PARTY_INFO party on obj.PARTY_ID = party.ID,&#xA;ecir.ci_current_flatfile_year ff&#xA;where ff.YearId = 1 and ff.InProgressFlag = 1&#xA;and col.CASE_YEAR = ff.FlatfileYear&#xA;and obj.PARTY_ID is not null&#xA;and ((col.id &lt;  0 and tmp.CASE_NO is not null) or col.id &gt; 0)&#xA;--and obj.SUB_SEQ_NBR is not null&#xA;order by col.CASE_NBR, eCIR.fnGetACISSequence(col.CASE_YEAR,isnull(obj.SEQ_NBR, tmp.OBJ_NUMBER), obj.PARENT_OBJECT_ID), eCIR.fnGetACISSubSequence(col.CASE_YEAR,isnull(obj.SEQ_NBR, tmp.OBJ_NUMBER), isnull(obj.SUB_SEQ_NBR,tmp.SEQ_NUMBER),obj.PARENT_OBJECT_ID)&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Sequence Container\Generate AllInvolved Extract\Update FLAT_FILES_REPO entry as Complete"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{25ba75af-48e6-44a5-9f66-5539d1091571}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Update FLAT_FILES_REPO entry as Complete"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{67DF6BBB-0440-40D8-A8AB-57E8A7F0CBF4}"
                  SQLTask:SqlStatementSource="update eCIR.flat_files_repo&#xA;set status='Complete'&#xA;where year=@useReportYear and fileversion=@useNewFileVersion&#xA;and type='AllInvolvedExtract'" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="@useReportYear"
                    SQLTask:DtsVariableName="User::ReportYear"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="11"
                    SQLTask:ParameterSize="4" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="@useNewFileVersion"
                    SQLTask:DtsVariableName="User::NewFileVersion"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="11"
                    SQLTask:ParameterSize="4" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Sequence Container\Generate AllInvolved Extract\Update FLAT_FILES_REPO entry as Failed"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{43ebf52d-10a5-4d55-b429-56b403c002cc}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Update FLAT_FILES_REPO entry as Failed"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="1">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{67DF6BBB-0440-40D8-A8AB-57E8A7F0CBF4}"
                  SQLTask:SqlStatementSource="update eCIR.flat_files_repo&#xA;set status='Failed'&#xA;where year=@useReportYear and fileversion=@useNewFileVersion&#xA;and type='AllInvolvedExtract'" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="@useReportYear"
                    SQLTask:DtsVariableName="User::ReportYear"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="11"
                    SQLTask:ParameterSize="4" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="@useNewFileVersion"
                    SQLTask:DtsVariableName="User::NewFileVersion"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="11"
                    SQLTask:ParameterSize="4" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Sequence Container\Generate AllInvolved Extract.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{706f84a0-d88b-4dc0-a6d5-72fced3d980d}"
              DTS:From="Package\Sequence Container\Generate AllInvolved Extract\Get flatFileId"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\Sequence Container\Generate AllInvolved Extract\Insert flat file records into flat file content table 2" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Sequence Container\Generate AllInvolved Extract.PrecedenceConstraints[Constraint 1]"
              DTS:CreationName=""
              DTS:DTSID="{0e687ecb-c2e2-4b08-9e85-e4bf2b763e2a}"
              DTS:From="Package\Sequence Container\Generate AllInvolved Extract\Insert flat file records into flat file content table 2"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 1"
              DTS:To="Package\Sequence Container\Generate AllInvolved Extract\Update FLAT_FILES_REPO entry as Complete" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Sequence Container\Generate AllInvolved Extract.PrecedenceConstraints[Constraint 2]"
              DTS:CreationName=""
              DTS:DTSID="{D86AC0EA-6667-42D5-BC18-1DF052154843}"
              DTS:From="Package\Sequence Container\Generate AllInvolved Extract\Insert flat file records into flat file content table 2"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 2"
              DTS:To="Package\Sequence Container\Generate AllInvolved Extract\Update FLAT_FILES_REPO entry as Failed"
              DTS:Value="1" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Sequence Container\Generate AllInvolved Extract.PrecedenceConstraints[Constraint 3]"
              DTS:CreationName=""
              DTS:DTSID="{6f0099c0-2fb0-4d66-9b89-d28e07f9836a}"
              DTS:From="Package\Sequence Container\Generate AllInvolved Extract\Generate FLAT_FILES_REPO entry"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 3"
              DTS:To="Package\Sequence Container\Generate AllInvolved Extract\Get flatFileId" />
          </DTS:PrecedenceConstraints>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Sequence Container\Generate Collision Description Extract"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:DTSID="{34135776-c654-4b3d-9be7-38f0b7fc8982}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="-1"
          DTS:ObjectName="Generate Collision Description Extract">
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Sequence Container\Generate Collision Description Extract\Generate FLAT_FILES_REPO entry"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{960acc3b-0c88-4c40-ae31-378078f17a3c}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Generate FLAT_FILES_REPO entry"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{67DF6BBB-0440-40D8-A8AB-57E8A7F0CBF4}"
                  SQLTask:SqlStatementSource="insert into eCIR.flat_files_repo&#xA;(year, name, type, CreatedDate, FileVersion, Status,CreatedBy)&#xA;VALUES(@useReportYear, '6_CollisionDescriptionExtract.txt', 'CollisionDescription', getDate(), @useNewFileVersion,'Pending',(select username from eCIR.CI_Current_Flatfile_Year where YearId=1))&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="@useReportYear"
                    SQLTask:DtsVariableName="User::ReportYear"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="11"
                    SQLTask:ParameterSize="4" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="@useNewFileVersion"
                    SQLTask:DtsVariableName="User::NewFileVersion"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="11"
                    SQLTask:ParameterSize="4" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Sequence Container\Generate Collision Description Extract\Get flatFileId"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{66bfecef-d048-4b6a-a890-fdb2428963c4}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Get flatFileId"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{67DF6BBB-0440-40D8-A8AB-57E8A7F0CBF4}"
                  SQLTask:SqlStatementSource="SELECT cast(flatfileid as integer) as FlatFileId&#xA;from eCIR.flat_files_repo&#xA;where year=@useReportYear&#xA;and FileVersion = @useNewFileVersion&#xA;and type='CollisionDescription'"
                  SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ResultBinding
                    SQLTask:ResultName="0"
                    SQLTask:DtsVariableName="User::FlatFileId" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="@useReportYear"
                    SQLTask:DtsVariableName="User::ReportYear"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="11"
                    SQLTask:ParameterSize="4" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="@useNewFileVersion"
                    SQLTask:DtsVariableName="User::NewFileVersion"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="11"
                    SQLTask:ParameterSize="4" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Sequence Container\Generate Collision Description Extract\Insert flat file records into flat file content table 6"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{f3c94ec1-79e1-41bc-9075-669ae828fc1c}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Insert flat file records into flat file content table 6"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{67DF6BBB-0440-40D8-A8AB-57E8A7F0CBF4}"
                  SQLTask:SqlStatementSource="insert into ecir.FLAT_FILES_REPO_CONTENTS&#xA;(FLATFILEREPO_ID, case_year, case_nbr,content)&#xA;select&#xA;--top 100&#xA;(select max(ffr.FlatFileId) from ecir.FLAT_FILES_REPO ffr) as flatfileid,&#xA;col.CASE_YEAR,&#xA;eCIR.fnPadText(col.CASE_NBR, ' ', 8, 0) as case_nbr,&#xA;--cast(col.CASE_YEAR as varchar(4)) +&#xA;--eCIR.fnPadText(col.CASE_NBR, ' ', 8, 0) +&#xA;--eCIR.fnPadText(' ', ' ', 6, 0) +&#xA;--replace(left(eCIR.fnPadText(col.COLLISION_LOCATION_DESC, ' ', 30, 0),30) +&#xA;replace(left(eCIR.fnPadText(col.LOC_TYPE_DESC, ' ', 30, 0),30) +&#xA;left(eCIR.fnPadText(col.PRIMARY_EVENT_DESC, ' ', 30, 0),30) +&#xA;left(eCIR.fnPadText(col.ROAD_CLASS_DESC, ' ', 30, 0),30) +&#xA;left(eCIR.fnPadText(col.ENV_CONDITION_DESC, ' ', 30, 0),30) +&#xA;left(eCIR.fnPadText(col.SURFACE_CONDITION_DESC, ' ', 30, 0),30) +&#xA;left(eCIR.fnPadText(col.FATAL_COMMENTS, ' ', 60, 0),60) +&#xA;left(eCIR.fnPadText(col.FATAL_DESCRIPTION, ' ', 240, 0),240) +&#xA;left(eCIR.fnPadText(col.COLLISION_DESCRIPTION, ' ', 240, 0),240), '°', '*') as content&#xA;from ecrdba.collisions col,&#xA;ecir.ci_current_flatfile_year ff&#xA;where ff.YearId = 1 and ff.InProgressFlag = 1&#xA;and col.CASE_YEAR = ff.FlatfileYear&#xA;order by col.ID desc" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Sequence Container\Generate Collision Description Extract\Update FLAT_FILES_REPO entry as Complete"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{69035704-03f2-4ade-b06a-faa4b28e49f3}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Update FLAT_FILES_REPO entry as Complete"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{67DF6BBB-0440-40D8-A8AB-57E8A7F0CBF4}"
                  SQLTask:SqlStatementSource="update eCIR.flat_files_repo&#xA;set status='Complete'&#xA;where year=@useReportYear and fileversion=@useNewFileVersion&#xA;and type='CollisionDescription'" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="@useReportYear"
                    SQLTask:DtsVariableName="User::ReportYear"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="11"
                    SQLTask:ParameterSize="4" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="@useNewFileVersion"
                    SQLTask:DtsVariableName="User::NewFileVersion"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="11"
                    SQLTask:ParameterSize="4" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Sequence Container\Generate Collision Description Extract\Update FLAT_FILES_REPO entry as Failed"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{6d0cf86a-7c6e-480e-8b20-60a4ae63c5f3}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Update FLAT_FILES_REPO entry as Failed"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="1">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{67DF6BBB-0440-40D8-A8AB-57E8A7F0CBF4}"
                  SQLTask:SqlStatementSource="update eCIR.flat_files_repo&#xA;set status='Failed'&#xA;where year=@useReportYear and fileversion=@useNewFileVersion&#xA;and type='CollisionDescription'" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="@useReportYear"
                    SQLTask:DtsVariableName="User::ReportYear"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="10"
                    SQLTask:ParameterSize="4" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="@useNewFileVersion"
                    SQLTask:DtsVariableName="User::NewFileVersion"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="11"
                    SQLTask:ParameterSize="4" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Sequence Container\Generate Collision Description Extract.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{8e6bcbbb-634b-4b6c-8683-de362aa96e53}"
              DTS:From="Package\Sequence Container\Generate Collision Description Extract\Insert flat file records into flat file content table 6"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\Sequence Container\Generate Collision Description Extract\Update FLAT_FILES_REPO entry as Complete" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Sequence Container\Generate Collision Description Extract.PrecedenceConstraints[Constraint 1]"
              DTS:CreationName=""
              DTS:DTSID="{dabb1138-8c7f-4501-84dc-c88cbcb109f3}"
              DTS:From="Package\Sequence Container\Generate Collision Description Extract\Get flatFileId"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 1"
              DTS:To="Package\Sequence Container\Generate Collision Description Extract\Insert flat file records into flat file content table 6" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Sequence Container\Generate Collision Description Extract.PrecedenceConstraints[Constraint 2]"
              DTS:CreationName=""
              DTS:DTSID="{8679423D-2D1A-4252-8EFF-1A90339E4E68}"
              DTS:From="Package\Sequence Container\Generate Collision Description Extract\Insert flat file records into flat file content table 6"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 2"
              DTS:To="Package\Sequence Container\Generate Collision Description Extract\Update FLAT_FILES_REPO entry as Failed"
              DTS:Value="1" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Sequence Container\Generate Collision Description Extract.PrecedenceConstraints[Constraint 3]"
              DTS:CreationName=""
              DTS:DTSID="{42175d69-7b65-4164-af80-feaea2f70e38}"
              DTS:From="Package\Sequence Container\Generate Collision Description Extract\Generate FLAT_FILES_REPO entry"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 3"
              DTS:To="Package\Sequence Container\Generate Collision Description Extract\Get flatFileId" />
          </DTS:PrecedenceConstraints>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Sequence Container\Generate Collision Extract"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:DTSID="{3167d790-fa54-4d92-9e54-1fbb489ff942}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="-1"
          DTS:ObjectName="Generate Collision Extract">
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Sequence Container\Generate Collision Extract\Generate FLAT_FILES_REPO entry"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{184e04f3-fba1-4ccc-8781-592487307b17}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Generate FLAT_FILES_REPO entry"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{67DF6BBB-0440-40D8-A8AB-57E8A7F0CBF4}"
                  SQLTask:SqlStatementSource="insert into eCIR.flat_files_repo&#xA;(year, name, type, CreatedDate, FileVersion, Status, CreatedBy)&#xA;VALUES(@fyear, '1_CollisionExtract.txt', 'CollisionExtract', getDate(), @fversion, 'Pending',(select username from eCIR.CI_Current_Flatfile_Year where YearId=1))&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="@fyear"
                    SQLTask:DtsVariableName="User::ReportYear"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="11"
                    SQLTask:ParameterSize="4" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="@fversion"
                    SQLTask:DtsVariableName="User::NewFileVersion"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="11"
                    SQLTask:ParameterSize="4" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Sequence Container\Generate Collision Extract\Get flatFileId"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{d37a16c8-b213-4ef7-8123-5825a9a82ef5}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Get flatFileId"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{67DF6BBB-0440-40D8-A8AB-57E8A7F0CBF4}"
                  SQLTask:SqlStatementSource="SELECT cast(flatfileid as integer) as FlatFileId&#xA;from eCIR.flat_files_repo&#xA;where year=@useReportYear&#xA;and FileVersion = @useNewFileVersion&#xA;and type='CollisionExtract'"
                  SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ResultBinding
                    SQLTask:ResultName="0"
                    SQLTask:DtsVariableName="User::FlatFileId" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="@useReportYear"
                    SQLTask:DtsVariableName="User::ReportYear"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="11"
                    SQLTask:ParameterSize="4" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="@useNewFileVersion"
                    SQLTask:DtsVariableName="User::NewFileVersion"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="11"
                    SQLTask:ParameterSize="4" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Sequence Container\Generate Collision Extract\Insert flat file records into flat file content table 1"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{25a04968-32da-48ec-8b85-7900e1179e6f}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Insert flat file records into flat file content table 1"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{67DF6BBB-0440-40D8-A8AB-57E8A7F0CBF4}"
                  SQLTask:SqlStatementSource="insert into ecir.FLAT_FILES_REPO_CONTENTS&#xA;(FLATFILEREPO_ID, case_year, case_nbr,content, content_b)&#xA;select tmp.flatfileid, tmp.case_year, tmp.case_nbr, tmp.content1, tmp.content2 from  (&#xA;select &#xA;distinct&#xA;--top 100&#xA;col.id,&#xA;(select max(ffr.FlatFileId) from ecir.FLAT_FILES_REPO ffr) as flatfileid,&#xA;col.case_year,&#xA;eCIR.fnPadText(col.CASE_NBR, ' ', 8, 0) as case_nbr,&#xA;eCIR.fnPadText(col.FF_NBR, ' ', 8, 1) +&#xA;eCIR.fnPadText(col.COMPLETE_INDICATOR, ' ', 1, 1) +&#xA;eCIR.fnPadText(col.BATCH_NUMBER, ' ' , 9, 1) +&#xA;eCIR.fnPadText(col.POLICE_SERVICE_CODE, ' ', 4, 0) +&#xA;eCIR.fnPadText(col.PFN_FILE_NBR, ' ', 15, 0) +&#xA;eCIR.fnPadText(col.OCCURENCE_TIMESTRING, ' ', 10, 0) +&#xA;case&#xA;when col.OCCURENCE_TIMESTRING is null then isnull(cast(datepart(dw,col.OCCURENCE_TIMESTAMP) as varchar(1)), '0')&#xA;else &#xA;case when PATINDEX('%/99',col.OCCURENCE_TIMESTRING) = 0 and PATINDEX('%/99%',col.OCCURENCE_TIMESTRING) = 0 then isnull(cast(datepart(dw,col.OCCURENCE_TIMESTAMP) as varchar(1)), cast(datepart(dw,cast(col.OCCURENCE_TIMESTRING as date)) as varchar(1)))&#xA;else '0' end end +&#xA;case&#xA;when col.OCCURENCE_TIME is null and col.id &lt; 0 then '        '&#xA;else case when col.id &gt; 0 then ecir.fnGetTimeStr(col.OCCURENCE_TIMESTAMP) else left(isnull(col.OCCURENCE_TIME, '0000'),2) +'.'+ right(isnull(col.OCCURENCE_TIME, '0000'),2) + '.00' end&#xA;end +&#xA;case isnull(col.LOC_IN_CITY_FLAG,-1) when 1 then '1' when -1 then ' ' else '2' end +&#xA;eCIR.fnPadText(col.MUNICIPALITY_TYPE, ' ', 2, 1) +&#xA;eCIR.fnPadText(col.LOC_DESC, ' ', 30, 0) +&#xA;case PATINDEX('%[A-Z]',col.LOC_HWY_NBR)&#xA;when 0 then replace(eCIR.fnPadText(eCIR.fnPadText(col.LOC_HWY_NBR, '0', 3, 1), ' ', 4, 0), '000', '   ')&#xA;else replace(eCIR.fnPadText(col.LOC_HWY_NBR, '0', 4, 1),'0000', '    ') end +&#xA;isnull(col.LEGAL_CLASSIFICATION, case when rvw.roadType = 'main' then '1' when rvw.roadType = 'secondary' then '2' else ' ' end) + &#xA;case len(ltrim(isnull(col.LOC_INT_HWY_NBR, '')))&#xA;when 0 then '    '&#xA;else&#xA;case PATINDEX('%[A-Z]',col.LOC_INT_HWY_NBR)&#xA;when 0 then eCIR.fnPadText(eCIR.fnPadText(col.LOC_INT_HWY_NBR, '0', 3, 1), ' ', 4, 0)&#xA;else eCIR.fnPadText(col.LOC_INT_HWY_NBR, '0', 4, 1) end&#xA;end +&#xA;-- Made up of several loc pieces&#xA;eCIR.fnPadText((case when col.LOC_STREET_NBR is null then '' else col.LOC_STREET_NBR + ' ' end) &#xA;+ (case when col.LOC_STREET_AVE is null then '' else col.LOC_STREET_AVE + ' ' end)&#xA;+ (case when col.loc_street_type is null then '' else col.loc_street_type + ' ' end)&#xA;+ (case when col.loc_street_quadrant is null then '' else col.loc_street_quadrant + ' ' end)&#xA;+ (case when col.loc_street_direction is null then '' else col.loc_street_direction end)&#xA;, ' ', 60, 0) +&#xA;-- Made up of several loc_int pieces&#xA;eCIR.fnPadText((case when col.LOC_INT_STREET_AVE is null then '' else col.LOC_INT_STREET_AVE + ' ' end)&#xA;+ (case when col.loc_INT_street_type is null then '' else col.loc_INT_street_type + ' ' end)&#xA;+ (case when col.loc_INT_street_quadrant is null then '' else col.loc_INT_street_quadrant + ' ' end)&#xA;+ (case when col.loc_INT_street_direction is null then '' else col.loc_INT_street_direction end)&#xA;, ' ', 60, 0) +&#xA;case isnull(col.LOC_DISTANCE, -99) when -99 then '      '&#xA;else eCIR.fnPadText(cast(col.LOC_DISTANCE as varchar(10)), '0', 6, 1) end +&#xA;-- Direction can be a combo&#xA;case isnull(col.LOC_NORTH_FLAG, 0) when 1 &#xA;then &#xA;-- NW or NE?&#xA;case isnull(col.LOC_EAST_FLAG, 0) when 1 then 'NE' else&#xA;case isnull(col.LOC_WEST_FLAG, 0) when 1 then 'NW' else &#xA;case isnull(col.LOC_SOUTH_FLAG, 0) when 1 then 'NS' else 'N 'end end end&#xA;else &#xA;case isnull(col.LOC_SOUTH_FLAG, 0) when 1 then  &#xA;-- SW or SE?&#xA;case isnull(col.LOC_EAST_FLAG, 0) when 1 then 'SE' else&#xA;case isnull(col.LOC_WEST_FLAG, 0) when 1 then 'SW' else 'S 'end end&#xA;else&#xA;case isnull(col.LOC_EAST_FLAG, 0) when 1 then &#xA;case isnull(col.LOC_WEST_FLAG, 0) when 1 then 'EW' else 'E ' end&#xA;else &#xA;case isnull(col.LOC_WEST_FLAG, 0) when 1 then 'W ' else '  '&#xA;end&#xA;end&#xA;end&#xA;end +&#xA;case isnull(col.LOC_DISTANCE_KM_FLAG , 9) when 9 then ' '&#xA;when 1 then 'K' else 'M'&#xA;end + &#xA;case eCIR.fnIsDateNull(col.REPORTED_TIMESTAMP)&#xA;when 1 then eCIR.fnPadText('     ', ' ', 18,0)&#xA;else replace(eCIR.fnPadText(cast(datepart(yyyy,col.REPORTED_TIMESTAMP)as varchar(4)),'0',4,1)+'/'+eCIR.fnPadText(cast(datepart(mm,col.REPORTED_TIMESTAMP) as varchar(2)),'0',2,1)+'/'+eCIR.fnPadText(cast(datepart(dd,col.REPORTED_TIMESTAMP) as varchar(2)),'0',2,1), '1900/01/01', '          ') +&#xA;replace(ecir.fnGetTimeStr(col.REPORTED_TIMESTAMP),'00.00.00', '        ') end +&#xA;isnull(eCIR.fnGetCodeValueCode(col.FILE_STATUS_ID), ' ') +&#xA;eCIR.fnPadText(col.VEHICLES_NBR,'0',4,1)+&#xA;eCIR.fnPadText(col.INJURED_NBR,'0',4,1)+&#xA;eCIR.fnPadText(col.FATALITIES_NBR,'0',4,1)+&#xA;case isnull(col.HIT_AND_RUN_FLAG, -1) when -1 then ' ' when 1 then '1' else '2' end +&#xA;case isnull(col.SCENE_VISITED_FLAG, -1) when -1 then ' ' when 1 then '1' else '2' end +&#xA;'  ' + -- Special study blank for now&#xA;isnull(col.PROP_DAMAGE_ONLY, ' ') +&#xA;case isnull(col.RADIUS_OF_CURVE, 'x') when 'x' then eCIR.fnPadText('',' ',9,0) else &#xA;replace(eCIR.fnPadText(col.RADIUS_OF_CURVE,'0',9,1), '000000000', '         ') end+&#xA;eCIR.fnPadText(isnull(col.DISTRICT_NAME, distr.description),' ',40,0) +&#xA;isnull(col.ADDL_WITNESS, ' ') +&#xA;eCIR.fnPadText(col.UNIT_NBR,' ',10,0) +&#xA;case isnull(col.INV_REG_NBR, '-1')&#xA;when '-1' then '      '&#xA;when '0' then '      '&#xA;when '000000' then '000000'&#xA;else replace(eCIR.fnPadText(col.INV_REG_NBR,'0',6,1),'000000', '      ') end +&#xA;case isnull(col.APPROVER_REG_NBR, '-1')&#xA;when '-1' then '      '&#xA;when '0' then '      '&#xA;when '000000' then '000000'&#xA;else replace(eCIR.fnPadText(col.APPROVER_REG_NBR,'0',6,1),'000000', '      ') end +&#xA;isnull(eCIR.fnPadText(cast(datepart(yyyy,col.FATAL_REPORT_DATE)as varchar(4)),'0',4,1)+'/'+eCIR.fnPadText(cast(datepart(mm,col.FATAL_REPORT_DATE) as varchar(2)),'0',2,1)+'/'+eCIR.fnPadText(cast(datepart(dd,col.FATAL_REPORT_DATE) as varchar(2)),'0',2,1), '          ') +&#xA;case when col.ENG_NOTIFIED_DATE is null then isnull(eCIR.fnGetDateString(reqs.REQUESTED_DATE_TIME), '          ')&#xA;else isnull(eCIR.fnPadText(cast(datepart(yyyy,col.ENG_NOTIFIED_DATE)as varchar(4)),'0',4,1)+'/'+eCIR.fnPadText(cast(datepart(mm,col.ENG_NOTIFIED_DATE) as varchar(2)),'0',2,1)+'/'+eCIR.fnPadText(cast(datepart(dd,col.ENG_NOTIFIED_DATE) as varchar(2)),'0',2,1), '          ') end +&#xA;case when col.ENG_REPORT_DATE is null then isnull(eCIR.fnGetDateString(recs.RECEIVED_DATE_TIME), '          ')&#xA;else isnull(eCIR.fnPadText(cast(datepart(yyyy,col.ENG_REPORT_DATE)as varchar(4)),'0',4,1)+'/'+eCIR.fnPadText(cast(datepart(mm,col.ENG_REPORT_DATE) as varchar(2)),'0',2,1)+'/'+eCIR.fnPadText(cast(datepart(dd,col.ENG_REPORT_DATE) as varchar(2)),'0',2,1), '          ')  end +&#xA;eCIR.fnPadText(col.FATAL_POL_RCMP_CODE, ' ', 4, 0) +&#xA;case when (col.case_year &lt; 2013 or (col.case_year &gt; 2012 and col.PLOTTING_STATUS_ID = eCIR.fnGetCodeValueId('plotting status','plotted'))) then &#xA;replace(eCIR.fnPadText(isnull(eCIR.fnGetCodeValueCode(plot.COLLISION_SUB_TYPE_ID), '0000'), '0', 4, 1), '0000', '    ') +&#xA;replace(eCIR.fnPadText(eCIR.fnGetCodeValueCode(plot.VEHICLE_DIRECTION_ID), '0', 2, 1),'00', '  ') +&#xA;replace(eCIR.fnPadText(eCIR.fnGetCodeValueCode(plot.VEHICLE2_DIRECTION_ID), '0', 2, 1), '00', '  ') +&#xA;replace(eCIR.fnPadText(eCIR.fnGetCodeValueCode(plot.VEHICLE_MANUVER_ID), '0', 2, 1), '00', '  ') +&#xA;replace(eCIR.fnPadText(eCIR.fnGetCodeValueCode(plot.VEHICLE2_MANUVER_ID), '0', 2, 1), '00', '  ')&#xA;else&#xA;eCIR.fnPadText('          ', ' ', 12, 1)&#xA;end +&#xA;eCIR.fnPadText(col.LOC_REF_STREET_AVE, ' ', 25, 0)+&#xA;replace(eCIR.fnPadText(col.LOC_REF_SPECIAL_DESC, ' ', 60, 0), '&quot;', '''') +&#xA;case when col.case_year &lt; 2013 then&#xA;case when plot.HIGHWAY is null then '    ' else&#xA;case PATINDEX('%[A-Z]',plot.HIGHWAY)&#xA;when 0 then eCIR.fnPadText(replace(eCIR.fnPadText(plot.HIGHWAY, '0', 3, 1),'000', ' '), ' ', 4, 0)&#xA;else eCIR.fnPadText(plot.HIGHWAY, '0', 4, 1) end end +&#xA;case isnull(plot.CONTROL_SECTION, -1) when -1 then '   '&#xA;else eCIR.fnPadText(plot.CONTROL_SECTION,'0',3,1) end +&#xA;case when (plot.SAFETY_SUB_SECTION is null or col.case_year &gt; 2012) then '   '&#xA;else eCIR.fnPadText(plot.SAFETY_SUB_SECTION,'0 ',3,1) end +&#xA;replace(eCIR.fnPadText(cast(plot.KM_POST as varchar),'0',7,1) + '0','00000000', '        ')&#xA;else &#xA;case when (col.case_year &gt; 2012 and col.PLOTTING_STATUS_ID = eCIR.fnGetCodeValueId('plotting status','plotted')) then &#xA;case when lrs.RoadName is null then '    ' else&#xA;CASE PATINDEX('%SHERWOOD%',lrs.RoadName)&#xA;WHEN 1 THEN '100 '&#xA;ELSE&#xA;case PATINDEX('%[A-Z]',lrs.RoadName)&#xA;when 0 then eCIR.fnPadText(replace(eCIR.fnPadText(lrs.RoadName, '0', 3, 1),'000', ' '), ' ', 4, 0)&#xA;else eCIR.fnPadText(lrs.RoadName, '0', 4, 1) end end END +&#xA;case isnull(lrs.ControlSection, -1) when -1 then '   '&#xA;else eCIR.fnPadText(lrs.ControlSection,'0',3,1) end +&#xA;case when (plot.SAFETY_SUB_SECTION is null or col.case_year &gt; 2012) then '   '&#xA;else eCIR.fnPadText(plot.SAFETY_SUB_SECTION,'0 ',3,1) end +&#xA;        case when (lrs.KMPOST is null) then '        '&#xA;             else eCIR.fnPadText(cast(lrs.KMPOST as varchar),'0',7,1) + '0' end &#xA;else&#xA;'                  ' -- 4+3+3+8=18 spaces&#xA;end end +&#xA;eCIR.fnGetLatLongStr(col.LOC_GPS_LAT) +&#xA;eCIR.fnGetLatLongStrAbs(col.LOC_GPS_LONG) +&#xA;case when (col.case_year &lt; 2013 or (col.case_year &gt; 2012 and col.PLOTTING_STATUS_ID = eCIR.fnGetCodeValueId('plotting status','plotted'))) then &#xA;eCIR.fnPadText(plot.STRUCTURE_ID, ' ', 14, 0)&#xA;else '              ' end +&#xA;replace(eCIR.fnPadText(cast(plot.OT_SHOULDER_WIDTH as varchar), '0', 6,1),'000000', '      ') +&#xA;replace(eCIR.fnPadText(cast(plot.IN_SHOULDER_WIDTH as varchar), '0', 7,1),'0000000', '       ') +&#xA;replace(eCIR.fnPadText(cast(plot.SURFACE_WIDTH as varchar), '0', 8,1),'00000000', '        ') +&#xA;replace(eCIR.fnPadText(cast(plot.MEDIAN_WIDTH as varchar), '0', 6,1),'000000', '      ') +&#xA;case when col.case_year &gt; 2012 then&#xA;replace(eCIR.fnPadText(tsv.WaadtVolume, '0', 9,1),'000000000', '         ')&#xA;else replace(eCIR.fnPadText(plot.AADT, '0', 9,1),'000000000', '         ') end +&#xA;case when col.case_year &gt; 2012 then&#xA;replace(eCIR.fnPadText(tsv.trafficyear, '0', 4,1),'0000', '    ')&#xA;else replace(eCIR.fnPadText(plot.AADT_YEAR, '0', 4,1),'0000', '    ') end +&#xA;replace(eCIR.fnPadText(plot.SPEED_DAY, '0', 3,1),'000', '   ') +&#xA;replace(eCIR.fnPadText(plot.SPEED_NIGHT, '0', 3,1),'000', '   ') +&#xA;case when col.case_year &gt; 2012 then&#xA;case when hts.HighwayTypeCode is null then '  '&#xA;else &#xA;case when hts.HighwayTypeCode = 'divided' then '03'&#xA;else&#xA;case when hts.HighwayTypeCode = 'undivided' then '02'&#xA;else&#xA;case when hts.HighwayTypeCode = 'gravel' then '01'&#xA;else '  '&#xA;end&#xA;end&#xA;end&#xA;end&#xA;else replace(eCIR.fnPadText(plot.HWY_TYPE, ' ', 2, 0),'00', '  ') end + &#xA;replace(eCIR.fnPadText(plot.ROAD_SURFACE_TYPE, ' ', 2, 0),'00', '  ') + &#xA;replace(eCIR.fnPadText(plot.SHLDR_SURFACE_TYPE, ' ', 2, 0),'00', '  ') + &#xA;isnull(plot.URBAN_RURAL, ' ') +&#xA;eCIR.fnPadText(plot.FROM_LOCATION, ' ', 60, 0) +&#xA;eCIR.fnPadText(plot.TO_LOCATION, ' ', 60, 0) +&#xA;case isnull(col.ROAD_ALIGNMENT_A_ID, -9999)&#xA;when -9999 then '  '&#xA;else eCIR.fnPadText(eCIR.fnGetCodeValueCode(col.ROAD_ALIGNMENT_A_ID), '0', 2, 1) end +&#xA;case isnull(col.ROAD_ALIGNMENT_B_ID, -9999)&#xA;when -9999 then '  '&#xA;else eCIR.fnPadText(eCIR.fnGetCodeValueCode(col.ROAD_ALIGNMENT_B_ID), '0', 2, 1) end +&#xA;case when (plot.INTERSECTION_TYPE_ID is null or (col.case_year &gt; 2012 and col.PLOTTING_STATUS_ID &lt;&gt; eCIR.fnGetCodeValueId('plotting status','plotted'))) then '  '&#xA;else eCIR.fnPadText(eCIR.fnGetCodeValueCode(plot.INTERSECTION_TYPE_ID), '0', 2, 1) end +&#xA;replace(eCIR.fnPadText(eCIR.fnGetCodeValueCode(col.SEVERITY_OF_COLLISION_ID), '0', 2, 1), '00', '  ') +&#xA;replace(eCIR.fnPadText(eCIR.fnGetCodeValueCode(col.COLLISION_LOCATION_ID), '0', 2, 1), '00', '  ') +&#xA;replace(eCIR.fnPadText(eCIR.fnGetCodeValueCode(col.PRIMARY_EVENT_ID), '0', 2, 1), '00', '  ') +&#xA;replace(eCIR.fnPadText(eCIR.fnGetCodeValueCode(col.ROAD_CLASS_ID), '0', 2, 1), '00', '  ') +&#xA;replace(eCIR.fnPadText(eCIR.fnGetCodeValueCode(col.SPECIAL_FACILITY_ID), '0', 2, 1), '00', '  ') +&#xA;replace(eCIR.fnPadText(eCIR.fnGetCodeValueCode(col.ENVIRONMENTAL_CONDITION_ID), '0', 2, 1), '00', '  ') +&#xA;replace(eCIR.fnPadText(eCIR.fnGetCodeValueCode(col.SURFACE_COND_ID), '0', 2, 1), '00', '  ') as content1,&#xA;eCIR.fnPadText('                                                                                          ', ' ', 96, 0) as content2&#xA;from ecrdba.collisions col &#xA;left outer join ECRDBA.ECR_COLL_PLOTTING_INFO plot on col.id = plot.COLLISION_ID&#xA;left outer join ECRDBA.ECR_COLL_SITE_VISIT_REQS reqs on (col.id = reqs.COLLISION_ID and reqs.REQUESTED_DATE_TIME = (select min(REQUESTED_DATE_TIME) from ECRDBA.ECR_COLL_SITE_VISIT_REQS ecsvr where ecsvr.COLLISION_ID = col.id))&#xA;left outer join ECRDBA.ECR_TRANS_DISTRICTS distr on reqs.TRANS_DISTRICT_ID = distr.TRANS_DISTRICT_ID&#xA;left outer join ECRDBA.ECR_COLL_SITE_VISIT_RECS recs on (col.id = recs.COLLISION_ID and recs.RECEIVED_DATE_TIME = (select min(RECEIVED_DATE_TIME) from ECRDBA.ECR_COLL_SITE_VISIT_RECS ecsvr2 where ecsvr2.COLLISION_ID = col.id))&#xA;left outer join TIMS.CI_Roads2_Vw rvw on col.LOC_HWY_NBR = rvw.RoadName&#xA;left outer join TIMS.CI_Collision_LRS lrs on (col.case_nbr = lrs.CaseNumber and col.CASE_YEAR = lrs.CaseYear and col.case_year+1 = lrs.FiscalYear)&#xA;left outer join TIMS.CI_Highway_Type_Segments hts on (lrs.FiscalYear = hts.FiscalYear and lrs.RoadName = hts.RoadName&#xA;and lrs.ControlSection = hts.StartControlSection and lrs.KMPost &gt;= hts.StartMeasure and&#xA;(&#xA;(lrs.KMPost &lt; hts.EndMeasure and hts.EndMeasure &lt;&gt; (select max(EndMeasure) from TIMS.CI_Highway_Type_Segments where RoadName=lrs.RoadName and EndControlSection = lrs.ControlSection and FiscalYear = lrs.FiscalYear and (lrs.RoadwayLabelOffset is null or (lrs.RoadwayLabelOffset is not null and left(lrs.RoadwayLabelOffset,1) = left(StartRoadwayLabel,1))))) or&#xA;(lrs.KMPost &lt;= hts.EndMeasure and hts.EndMeasure = (select max(EndMeasure) from TIMS.CI_Highway_Type_Segments where RoadName=lrs.RoadName and EndControlSection = lrs.ControlSection and FiscalYear = lrs.FiscalYear and (lrs.RoadwayLabelOffset is null or (lrs.RoadwayLabelOffset is not null and left(lrs.RoadwayLabelOffset,1) = left(StartRoadwayLabel,1)))))&#xA;)&#xA;-- Not all LRS records will come back with a roadway label&#xA;and ((lrs.RoadwayLabelOffset is null or len(ltrim(lrs.RoadwayLabelOffset))&lt;1) or (lrs.RoadwayLabelOffset is not null and lrs.RoadwayLabelOffset = hts.StartRoadwayLabel))&#xA;)&#xA;left outer join TIMS.CI_Traffic_Segment_Volumes tsv on (col.case_year = tsv.TrafficYear and lrs.FiscalYear = tsv.FiscalYear and lrs.RoadName = tsv.RoadName&#xA;and lrs.ControlSection = tsv.ControlSection and lrs.KMPost &gt;= tsv.StartMeasure and&#xA;(&#xA;(lrs.KMPost &lt; tsv.EndMeasure and tsv.EndMeasure &lt;&gt; (select max(EndMeasure) from TIMS.CI_Traffic_Segment_Volumes where RoadName=lrs.RoadName and ControlSection = lrs.ControlSection and FiscalYear = lrs.FiscalYear and (lrs.RoadwayLabelOffset is null or (lrs.RoadwayLabelOffset is not null and left(lrs.RoadwayLabelOffset,1) = left(RoadwayLabel,1))))) or&#xA;(lrs.KMPost &lt;= tsv.EndMeasure and tsv.EndMeasure = (select max(EndMeasure) from TIMS.CI_Traffic_Segment_Volumes where RoadName=lrs.RoadName and ControlSection = lrs.ControlSection and FiscalYear = lrs.FiscalYear and (lrs.RoadwayLabelOffset is null or (lrs.RoadwayLabelOffset is not null and left(lrs.RoadwayLabelOffset,1) = left(RoadwayLabel,1)))))&#xA;)&#xA;-- Not all LRS records will come back with a roadway label&#xA;and ((lrs.RoadwayLabelOffset is null or len(ltrim(lrs.RoadwayLabelOffset))&lt;1) or (lrs.RoadwayLabelOffset is not null and lrs.RoadwayLabelOffset = tsv.RoadwayLabel))&#xA;),&#xA;ecir.ci_current_flatfile_year ff&#xA;where ff.YearId = 1 and ff.InProgressFlag = 1&#xA;and col.CASE_YEAR = ff.FlatfileYear) as tmp&#xA;order by tmp.ID desc&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Sequence Container\Generate Collision Extract\Update FLAT_FILES_REPO entry as Complete"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{f8510045-16ba-4300-a04b-f0c4b0a30f74}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Update FLAT_FILES_REPO entry as Complete"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{67DF6BBB-0440-40D8-A8AB-57E8A7F0CBF4}"
                  SQLTask:SqlStatementSource="update eCIR.flat_files_repo&#xA;set status='Complete'&#xA;where year=@useReportYear and fileversion=@useNewFileVersion&#xA;and type='CollisionExtract'" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="@useReportYear"
                    SQLTask:DtsVariableName="User::ReportYear"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="11"
                    SQLTask:ParameterSize="4" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="@useNewFileVersion"
                    SQLTask:DtsVariableName="User::NewFileVersion"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="11"
                    SQLTask:ParameterSize="4" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Sequence Container\Generate Collision Extract\Update FLAT_FILES_REPO entry as Failed"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{76cea951-fde0-4a53-8c4b-21d8df2f362a}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Update FLAT_FILES_REPO entry as Failed"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="1">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{67DF6BBB-0440-40D8-A8AB-57E8A7F0CBF4}"
                  SQLTask:SqlStatementSource="update eCIR.flat_files_repo&#xA;set status='Failed'&#xA;where year=@fyear and fileversion=@fversion&#xA;and type='CollisionExtract'" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="@fyear"
                    SQLTask:DtsVariableName="User::ReportYear"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="11"
                    SQLTask:ParameterSize="4" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="@fversion"
                    SQLTask:DtsVariableName="User::NewFileVersion"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="11"
                    SQLTask:ParameterSize="4" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Sequence Container\Generate Collision Extract.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{36169377-c718-44e0-9bef-fe04ab54f2c7}"
              DTS:From="Package\Sequence Container\Generate Collision Extract\Insert flat file records into flat file content table 1"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\Sequence Container\Generate Collision Extract\Update FLAT_FILES_REPO entry as Complete" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Sequence Container\Generate Collision Extract.PrecedenceConstraints[Constraint 1]"
              DTS:CreationName=""
              DTS:DTSID="{4d7f86b0-9751-49fb-9bfb-eb6d5ad07255}"
              DTS:From="Package\Sequence Container\Generate Collision Extract\Get flatFileId"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 1"
              DTS:To="Package\Sequence Container\Generate Collision Extract\Insert flat file records into flat file content table 1" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Sequence Container\Generate Collision Extract.PrecedenceConstraints[Constraint 2]"
              DTS:CreationName=""
              DTS:DTSID="{7D1FF397-5A40-4CC7-AC25-6B2B962BC791}"
              DTS:From="Package\Sequence Container\Generate Collision Extract\Insert flat file records into flat file content table 1"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 2"
              DTS:To="Package\Sequence Container\Generate Collision Extract\Update FLAT_FILES_REPO entry as Failed"
              DTS:Value="1" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Sequence Container\Generate Collision Extract.PrecedenceConstraints[Constraint 3]"
              DTS:CreationName=""
              DTS:DTSID="{fdb83d9b-7c26-4589-a7fd-da132d44cfe7}"
              DTS:From="Package\Sequence Container\Generate Collision Extract\Generate FLAT_FILES_REPO entry"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 3"
              DTS:To="Package\Sequence Container\Generate Collision Extract\Get flatFileId" />
          </DTS:PrecedenceConstraints>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Sequence Container\Generate Collision Information"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:DTSID="{d97bdfd6-a048-4c67-9036-99defef1fed4}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="-1"
          DTS:ObjectName="Generate Collision Information">
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Sequence Container\Generate Collision Information\Generate FLAT_FILES_REPO entry"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{a265242f-1fa5-44f5-ae87-ff389c9b7cc8}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Generate FLAT_FILES_REPO entry"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{67DF6BBB-0440-40D8-A8AB-57E8A7F0CBF4}"
                  SQLTask:SqlStatementSource="insert into eCIR.flat_files_repo&#xA;(year, name, type, CreatedDate, FileVersion, Status, CreatedBy)&#xA;VALUES(@useReportYear, '7_CollisionInformationFlatFile.txt', 'CollisionInformation', getDate(), @useNewFileVersion,'Complete',(select username from eCIR.CI_Current_Flatfile_Year where YearId=1))&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="@useReportYear"
                    SQLTask:DtsVariableName="User::ReportYear"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="11"
                    SQLTask:ParameterSize="4" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="@useNewFileVersion"
                    SQLTask:DtsVariableName="User::NewFileVersion"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="11"
                    SQLTask:ParameterSize="4" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Sequence Container\Generate Collision Information\Get flatFileId"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:Disabled="True"
              DTS:DTSID="{dbf02794-e082-4fcf-878c-80109d2ffdb0}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Get flatFileId"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="1">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{67DF6BBB-0440-40D8-A8AB-57E8A7F0CBF4}"
                  SQLTask:SqlStatementSource="SELECT cast(flatfileid as integer) as FlatFileId&#xA;from eCIR.flat_files_repo&#xA;where year=@useReportYear&#xA;and FileVersion = @useNewFileVersion&#xA;and type='CollisionExtract'"
                  SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ResultBinding
                    SQLTask:ResultName="0"
                    SQLTask:DtsVariableName="User::FlatFileId" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="@useReportYear"
                    SQLTask:DtsVariableName="User::ReportYear"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="11"
                    SQLTask:ParameterSize="4" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="@useNewFileVersion"
                    SQLTask:DtsVariableName="User::NewFileVersion"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="11"
                    SQLTask:ParameterSize="4" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Sequence Container\Generate Collision Information\Insert flat file records into flat file content table"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:Disabled="True"
              DTS:DTSID="{f08204fc-5c0f-4384-9b1c-52c49bab2878}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Insert flat file records into flat file content table"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="2">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{67DF6BBB-0440-40D8-A8AB-57E8A7F0CBF4}"
                  SQLTask:SqlStatementSource="insert into ecir.FLAT_FILES_REPO_CONTENTS&#xA;(FLATFILEREPO_ID, case_year, case_nbr,content)&#xA;select&#xA;--top 100&#xA;(select max(ffr.FlatFileId) from ecir.FLAT_FILES_REPO ffr) as flatfileid,&#xA;col.case_year,&#xA;eCIR.fnPadText(col.CASE_NBR, ' ', 8, 0),&#xA;--cast(col.CASE_YEAR as varchar(4)) +&#xA;--eCIR.fnPadText(col.CASE_NBR, ' ', 8, 0) +&#xA;eCIR.fnPadText(' ', ' ', 6, 0) +&#xA;eCIR.fnPadText(col.FF_NBR, ' ', 8, 1) +&#xA;eCIR.fnPadText(col.COMPLETE_INDICATOR, ' ', 1, 1) +&#xA;eCIR.fnPadText(col.BATCH_NUMBER, ' ' , 9, 1) +&#xA;eCIR.fnPadText(col.POLICE_SERVICE_CODE, ' ', 4, 0) +&#xA;eCIR.fnPadText(col.PFN_FILE_NBR, ' ', 15, 0) +&#xA;--case eCIR.fnIsDateNull(col.OCCURENCE_TIMESTAMP)&#xA;--when 1 then eCIR.fnPadText('        ', ' ', 19, 0)&#xA;--else cast(datepart(yyyy,col.OCCURENCE_TIMESTAMP)as varchar(4))+'/'+eCIR.fnPadText(cast(datepart(mm,col.OCCURENCE_TIMESTAMP) as varchar(2)),'0',2,1)+'/'+eCIR.fnPadText(cast(datepart(dd,col.OCCURENCE_TIMESTAMP) as varchar(2)),'0',2,1) +&#xA;eCIR.fnPadText(col.OCCURENCE_TIMESTRING, ' ', 10, 0) +&#xA;case len(isnull(col.OCCURENCE_TIMESTRING, ''))&#xA;when 0 then cast(datepart(dw,col.OCCURENCE_TIMESTAMP) as varchar(1))&#xA;else &#xA;case PATINDEX('/99',right(col.OCCURENCE_TIMESTRING,3))&#xA;when 0 then cast(datepart(dw,col.OCCURENCE_TIMESTAMP) as varchar(1))&#xA;else '0' end&#xA;end +&#xA;ecir.fnGetTimeStr(col.OCCURENCE_TIMESTAMP) +&#xA;case isnull(col.LOC_IN_CITY_FLAG,1) when 1 then '1' else '2' end +&#xA;eCIR.fnPadText(col.MUNICIPALITY_TYPE, ' ', 2, 1) +&#xA;eCIR.fnPadText(col.LOC_DESC, ' ', 30, 0) +&#xA;case PATINDEX('%[A-Z]',col.LOC_HWY_NBR)&#xA;when 0 then replace(eCIR.fnPadText(eCIR.fnPadText(col.LOC_HWY_NBR, '0', 3, 1), ' ', 4, 0), '000', '   ')&#xA;else eCIR.fnPadText(col.LOC_HWY_NBR, '0', 4, 1) end +&#xA;isnull(col.LEGAL_CLASSIFICATION, ' ') + &#xA;case len(ltrim(isnull(col.LOC_INT_HWY_NBR, '')))&#xA;when 0 then '    '&#xA;else&#xA;case PATINDEX('%[A-Z]',col.LOC_INT_HWY_NBR)&#xA;when 0 then eCIR.fnPadText(eCIR.fnPadText(col.LOC_INT_HWY_NBR, '0', 3, 1), ' ', 4, 0)&#xA;else eCIR.fnPadText(col.LOC_INT_HWY_NBR, '0', 4, 1) end&#xA;end +&#xA;eCIR.fnPadText(col.LOC_STREET_AVE, ' ', 60, 0) +&#xA;eCIR.fnPadText(col.LOC_INT_STREET_AVE, ' ', 60, 0) +&#xA;case isnull(col.LOC_DISTANCE_KM_FLAG , 9) when 9 then '      '&#xA;else eCIR.fnPadText(cast(col.LOC_DISTANCE as varchar(10)), '0', 6, 1) end +&#xA;case isnull(col.LOC_DISTANCE_KM_FLAG , 9) when 9 then '  '&#xA;else &#xA;case isnull(col.LOC_NORTH_FLAG, 0) when 1 &#xA;then &#xA;&#xA;case isnull(col.LOC_EAST_FLAG, 0) when 1 then 'NE' else&#xA;case isnull(col.LOC_WEST_FLAG, 0) when 1 then 'NW' else 'N 'end end&#xA;&#xA;else &#xA;case isnull(col.LOC_SOUTH_FLAG, 0) when 1 then  &#xA;&#xA;case isnull(col.LOC_EAST_FLAG, 0) when 1 then 'SE' else&#xA;case isnull(col.LOC_WEST_FLAG, 0) when 1 then 'SW' else 'S 'end end&#xA;else&#xA;case isnull(col.LOC_EAST_FLAG, 0) when 1 then 'E ' else &#xA;case isnull(col.LOC_WEST_FLAG, 0) when 1 then 'W ' else '  '&#xA;end&#xA;end&#xA;end&#xA;end&#xA;end +&#xA;case isnull(col.LOC_DISTANCE_KM_FLAG , 9) when 9 then ' '&#xA;else &#xA;case isnull(col.LOC_DISTANCE_KM_FLAG,0) when 1 then 'K' else 'M' end&#xA;end + &#xA;case eCIR.fnIsDateNull(col.REPORTED_TIMESTAMP)&#xA;when 1 then eCIR.fnPadText('     ', ' ', 18,0)&#xA;else cast(datepart(yyyy,col.REPORTED_TIMESTAMP)as varchar(4))+'/'+eCIR.fnPadText(cast(datepart(mm,col.REPORTED_TIMESTAMP) as varchar(2)),'0',2,1)+'/'+eCIR.fnPadText(cast(datepart(dd,col.REPORTED_TIMESTAMP) as varchar(2)),'0',2,1) +&#xA;ecir.fnGetTimeStr(col.REPORTED_TIMESTAMP) end +&#xA;eCIR.fnGetCodeValueCode(col.FILE_STATUS_ID) +&#xA;eCIR.fnPadText(col.VEHICLES_NBR,'0',4,1)+&#xA;eCIR.fnPadText(col.INJURED_NBR,'0',4,1)+&#xA;eCIR.fnPadText(col.FATALITIES_NBR,'0',4,1)+&#xA;case isnull(col.HIT_AND_RUN_FLAG, -1) when -1 then ' ' when 1 then '1' else '2' end +&#xA;case isnull(col.SCENE_VISITED_FLAG, -1) when -1 then ' ' when 1 then '1' else '2' end +&#xA;'  ' + -- Special study blank for now&#xA;eCIR.fnPadText(col.PROP_DAMAGE_ONLY,'0',1,1) +&#xA;case isnull((select 1 from tims.CI_Roads_Less500_Vw where roadname = col.LOC_HWY_NBR), 0)&#xA;when 1 then &#xA;case isnull(col.RADIUS_OF_CURVE, 'x') when 'x' then eCIR.fnPadText('',' ',9,0) end&#xA;else replace(eCIR.fnPadText(col.RADIUS_OF_CURVE,'0',9,1), '000000000', '         ') end +&#xA;eCIR.fnPadText(col.DISTRICT_NAME,' ',40,0)+&#xA;isnull(col.ADDL_WITNESS, ' ') +&#xA;eCIR.fnPadText(col.UNIT_NBR,' ',10,0) +&#xA;case isnull(col.INV_REG_NBR, -1)&#xA;when -1 then '      '&#xA;when 0 then '      '&#xA;else eCIR.fnPadText(col.INV_REG_NBR,'0',6,1) end +&#xA;case isnull(col.APPROVER_REG_NBR, '-1')&#xA;when '-1' then '      '&#xA;when '0' then '      '&#xA;else replace(eCIR.fnPadText(col.APPROVER_REG_NBR,'0',6,1),'000000', '      ') end +&#xA;isnull(cast(datepart(yyyy,col.FATAL_REPORT_DATE)as varchar(4))+'/'+eCIR.fnPadText(cast(datepart(mm,col.FATAL_REPORT_DATE) as varchar(2)),'0',2,1)+'/'+eCIR.fnPadText(cast(datepart(dd,col.FATAL_REPORT_DATE) as varchar(2)),'0',2,1), '          ') +&#xA;isnull(cast(datepart(yyyy,col.ENG_NOTIFIED_DATE)as varchar(4))+'/'+eCIR.fnPadText(cast(datepart(mm,col.ENG_NOTIFIED_DATE) as varchar(2)),'0',2,1)+'/'+eCIR.fnPadText(cast(datepart(dd,col.ENG_NOTIFIED_DATE) as varchar(2)),'0',2,1), '          ') +&#xA;isnull(cast(datepart(yyyy,col.ENG_REPORT_DATE)as varchar(4))+'/'+eCIR.fnPadText(cast(datepart(mm,col.ENG_REPORT_DATE) as varchar(2)),'0',2,1)+'/'+eCIR.fnPadText(cast(datepart(dd,col.ENG_REPORT_DATE) as varchar(2)),'0',2,1), '          ') +&#xA;replace(eCIR.fnPadText(col.FATAL_POL_RCMP_CODE, '0', 4, 1), '0000', '    ') +&#xA;replace(eCIR.fnPadText(isnull(eCIR.fnGetCodeValueCode(plot.COLLISION_SUB_TYPE_ID), '0000'), '0', 4, 1), '0000', '    ') +&#xA;replace(eCIR.fnPadText(eCIR.fnGetCodeValueCode(plot.VEHICLE_DIRECTION_ID), '0', 2, 1),'00', '  ') +&#xA;replace(eCIR.fnPadText(eCIR.fnGetCodeValueCode(plot.VEHICLE2_DIRECTION_ID), '0', 2, 1), '00', '  ') +&#xA;replace(eCIR.fnPadText(eCIR.fnGetCodeValueCode(plot.VEHICLE_MANUVER_ID), '0', 2, 1), '00', '  ') +&#xA;replace(eCIR.fnPadText(eCIR.fnGetCodeValueCode(plot.VEHICLE2_MANUVER_ID), '0', 2, 1), '00', '  ') +&#xA;eCIR.fnPadText(col.LOC_REF_STREET_AVE, ' ', 25, 0)+&#xA;replace(eCIR.fnPadText(col.LOC_REF_SPECIAL_DESC, ' ', 60, 0), '&quot;', '''') +&#xA;case isnull(plot.HIGHWAY, '~')&#xA;when '~' then '    ' else&#xA;case PATINDEX('%[A-Z]',plot.HIGHWAY)&#xA;when 0 then eCIR.fnPadText(replace(eCIR.fnPadText(plot.HIGHWAY, '0', 3, 1),'000', ' '), ' ', 4, 0)&#xA;else eCIR.fnPadText(plot.HIGHWAY, '0', 4, 1) end end +&#xA;case isnull(plot.CONTROL_SECTION, -1) when -1 then '   '&#xA;else eCIR.fnPadText(plot.CONTROL_SECTION,'0',3,1) end +&#xA;case isnull(plot.SAFETY_SUB_SECTION, -1) when -1 then '   '&#xA;else eCIR.fnPadText(plot.SAFETY_SUB_SECTION,'0',3,1) end +&#xA;replace(eCIR.fnPadText(cast(plot.KM_POST as varchar),'0',7,1) + '0','00000000', '        ')  +&#xA;eCIR.fnGetLatLongStr(col.LOC_GPS_LAT) +&#xA;eCIR.fnGetLatLongStr(col.LOC_GPS_LONG) +&#xA;eCIR.fnPadText(plot.STRUCTURE_ID, ' ', 14, 0) +&#xA;replace(eCIR.fnPadText(cast(plot.OT_SHOULDER_WIDTH as varchar), '0', 6,1),'000000', '      ') +&#xA;replace(eCIR.fnPadText(cast(plot.IN_SHOULDER_WIDTH as varchar), '0', 7,1),'0000000', '       ') +&#xA;replace(eCIR.fnPadText(cast(plot.SURFACE_WIDTH as varchar), '0', 8,1),'00000000', '        ') +&#xA;replace(eCIR.fnPadText(cast(plot.MEDIAN_WIDTH as varchar), '0', 6,1),'000000', '      ') +&#xA;replace(eCIR.fnPadText(plot.AADT, '0', 9,1),'000000000', '         ') +&#xA;replace(eCIR.fnPadText(plot.AADT_YEAR, '0', 4,1),'0000', '    ') +&#xA;replace(eCIR.fnPadText(plot.SPEED_DAY, '0', 3,1),'000', '   ') +&#xA;replace(eCIR.fnPadText(plot.SPEED_NIGHT, '0', 3,1),'000', '   ') +&#xA;replace(eCIR.fnPadText(plot.HWY_TYPE, ' ', 2, 0),'00', '  ') + &#xA;replace(eCIR.fnPadText(plot.ROAD_SURFACE_TYPE, ' ', 2, 0),'00', '  ') + &#xA;replace(eCIR.fnPadText(plot.SHLDR_SURFACE_TYPE, ' ', 2, 0),'00', '  ') + &#xA;isnull(plot.URBAN_RURAL, ' ') +&#xA;eCIR.fnPadText(plot.FROM_LOCATION, ' ', 60, 0) +&#xA;eCIR.fnPadText(plot.TO_LOCATION, ' ', 60, 0) +&#xA;case isnull(col.ROAD_ALIGNMENT_A_ID, -9999)&#xA;when -9999 then '  '&#xA;else eCIR.fnPadText(eCIR.fnGetCodeValueCode(col.ROAD_ALIGNMENT_A_ID), '0', 2, 1) end +&#xA;case isnull(col.ROAD_ALIGNMENT_B_ID, -9999)&#xA;when -9999 then '  '&#xA;else eCIR.fnPadText(eCIR.fnGetCodeValueCode(col.ROAD_ALIGNMENT_B_ID), '0', 2, 1) end +&#xA;replace(eCIR.fnPadText(eCIR.fnGetCodeValueCode(plot.INTERSECTION_TYPE_ID), '0', 2, 1), '00', '  ') +&#xA;replace(eCIR.fnPadText(eCIR.fnGetCodeValueCode(col.SEVERITY_OF_COLLISION_ID), '0', 2, 1), '00', '  ') +&#xA;replace(eCIR.fnPadText(eCIR.fnGetCodeValueCode(col.COLLISION_LOCATION_ID), '0', 2, 1), '00', '  ') +&#xA;replace(eCIR.fnPadText(eCIR.fnGetCodeValueCode(col.PRIMARY_EVENT_ID), '0', 2, 1), '00', '  ') +&#xA;replace(eCIR.fnPadText(eCIR.fnGetCodeValueCode(col.ROAD_CLASS_ID), '0', 2, 1), '00', '  ') +&#xA;replace(eCIR.fnPadText(eCIR.fnGetCodeValueCode(col.SPECIAL_FACILITY_ID), '0', 2, 1), '00', '  ') +&#xA;replace(eCIR.fnPadText(eCIR.fnGetCodeValueCode(col.ENVIRONMENTAL_CONDITION_ID), '0', 2, 1), '00', '  ') +&#xA;replace(eCIR.fnPadText(eCIR.fnGetCodeValueCode(col.SURFACE_COND_ID), '0', 2, 1), '00', '  ') +&#xA;eCIR.fnPadText('                                                                                          ', ' ', 96, 0)&#xA;&#xA;from ecrdba.collisions col &#xA;left outer join ECRDBA.ECR_COLL_PLOTTING_INFO plot on col.id = plot.COLLISION_ID,&#xA;ecir.ci_current_flatfile_year ff&#xA;where ff.YearId = 1 and ff.InProgressFlag = 1&#xA;and col.CASE_YEAR = ff.FlatfileYear&#xA;order by col.ID desc&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Sequence Container\Generate Collision Information\Update FLAT_FILES_REPO entry as Complete"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:Disabled="True"
              DTS:DTSID="{42e0bb19-dbe0-42a8-be36-a90c7f2b74a8}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Update FLAT_FILES_REPO entry as Complete"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="3">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{67DF6BBB-0440-40D8-A8AB-57E8A7F0CBF4}"
                  SQLTask:SqlStatementSource="update eCIR.flat_files_repo&#xA;set status='Complete'&#xA;where year=@useReportYear and fileversion=@useNewFileVersion&#xA;and type='CollisionExtract'" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="@useReportYear"
                    SQLTask:DtsVariableName="User::ReportYear"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="11"
                    SQLTask:ParameterSize="4" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="@useNewFileVersion"
                    SQLTask:DtsVariableName="User::NewFileVersion"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="11"
                    SQLTask:ParameterSize="4" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Sequence Container\Generate Object Involved"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:DTSID="{9129b7b4-bf26-425c-943a-b2fcf8576792}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="-1"
          DTS:ObjectName="Generate Object Involved">
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Sequence Container\Generate Object Involved\Generate FLAT_FILES_REPO entry"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{382c2046-b42a-407e-a4d1-8b2ab066cc56}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Generate FLAT_FILES_REPO entry"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{67DF6BBB-0440-40D8-A8AB-57E8A7F0CBF4}"
                  SQLTask:SqlStatementSource="insert into eCIR.flat_files_repo&#xA;(year, name, type, CreatedDate, FileVersion, Status, CreatedBy)&#xA;VALUES(@useReportYear, '8_ObjectInvolvedInformationFile.txt', 'ObjectInvolvedInformation', getDate(), @useNewFileVersion,'Complete',(select username from eCIR.CI_Current_Flatfile_Year where YearId=1))&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="@useReportYear"
                    SQLTask:DtsVariableName="User::ReportYear"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="11"
                    SQLTask:ParameterSize="4" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="@useNewFileVersion"
                    SQLTask:DtsVariableName="User::NewFileVersion"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="11"
                    SQLTask:ParameterSize="4" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Sequence Container\Generate Object Involved\Get flatFileId"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:Disabled="True"
              DTS:DTSID="{a6faf490-ee3e-417f-b8fb-ae2e17e629f2}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Get flatFileId"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="1">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{67DF6BBB-0440-40D8-A8AB-57E8A7F0CBF4}"
                  SQLTask:SqlStatementSource="SELECT cast(flatfileid as integer) as FlatFileId&#xA;from eCIR.flat_files_repo&#xA;where year=@useReportYear&#xA;and FileVersion = @useNewFileVersion&#xA;and type='CollisionExtract'"
                  SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ResultBinding
                    SQLTask:ResultName="0"
                    SQLTask:DtsVariableName="User::FlatFileId" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="@useReportYear"
                    SQLTask:DtsVariableName="User::ReportYear"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="11"
                    SQLTask:ParameterSize="4" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="@useNewFileVersion"
                    SQLTask:DtsVariableName="User::NewFileVersion"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="11"
                    SQLTask:ParameterSize="4" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Sequence Container\Generate Object Involved\Insert flat file records into flat file content table"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:Disabled="True"
              DTS:DTSID="{54ebd7b3-5665-4f76-b4f8-399ff04d8926}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Insert flat file records into flat file content table"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="2">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{67DF6BBB-0440-40D8-A8AB-57E8A7F0CBF4}"
                  SQLTask:SqlStatementSource="insert into ecir.FLAT_FILES_REPO_CONTENTS&#xA;(FLATFILEREPO_ID, case_year, case_nbr,content)&#xA;select&#xA;--top 100&#xA;(select max(ffr.FlatFileId) from ecir.FLAT_FILES_REPO ffr) as flatfileid,&#xA;col.case_year,&#xA;eCIR.fnPadText(col.CASE_NBR, ' ', 8, 0),&#xA;--cast(col.CASE_YEAR as varchar(4)) +&#xA;--eCIR.fnPadText(col.CASE_NBR, ' ', 8, 0) +&#xA;eCIR.fnPadText(' ', ' ', 6, 0) +&#xA;eCIR.fnPadText(col.FF_NBR, ' ', 8, 1) +&#xA;eCIR.fnPadText(col.COMPLETE_INDICATOR, ' ', 1, 1) +&#xA;eCIR.fnPadText(col.BATCH_NUMBER, ' ' , 9, 1) +&#xA;eCIR.fnPadText(col.POLICE_SERVICE_CODE, ' ', 4, 0) +&#xA;eCIR.fnPadText(col.PFN_FILE_NBR, ' ', 15, 0) +&#xA;--case eCIR.fnIsDateNull(col.OCCURENCE_TIMESTAMP)&#xA;--when 1 then eCIR.fnPadText('        ', ' ', 19, 0)&#xA;--else cast(datepart(yyyy,col.OCCURENCE_TIMESTAMP)as varchar(4))+'/'+eCIR.fnPadText(cast(datepart(mm,col.OCCURENCE_TIMESTAMP) as varchar(2)),'0',2,1)+'/'+eCIR.fnPadText(cast(datepart(dd,col.OCCURENCE_TIMESTAMP) as varchar(2)),'0',2,1) +&#xA;eCIR.fnPadText(col.OCCURENCE_TIMESTRING, ' ', 10, 0) +&#xA;case len(isnull(col.OCCURENCE_TIMESTRING, ''))&#xA;when 0 then cast(datepart(dw,col.OCCURENCE_TIMESTAMP) as varchar(1))&#xA;else &#xA;case PATINDEX('/99',right(col.OCCURENCE_TIMESTRING,3))&#xA;when 0 then cast(datepart(dw,col.OCCURENCE_TIMESTAMP) as varchar(1))&#xA;else '0' end&#xA;end +&#xA;ecir.fnGetTimeStr(col.OCCURENCE_TIMESTAMP) +&#xA;case isnull(col.LOC_IN_CITY_FLAG,1) when 1 then '1' else '2' end +&#xA;eCIR.fnPadText(col.MUNICIPALITY_TYPE, ' ', 2, 1) +&#xA;eCIR.fnPadText(col.LOC_DESC, ' ', 30, 0) +&#xA;case PATINDEX('%[A-Z]',col.LOC_HWY_NBR)&#xA;when 0 then replace(eCIR.fnPadText(eCIR.fnPadText(col.LOC_HWY_NBR, '0', 3, 1), ' ', 4, 0), '000', '   ')&#xA;else eCIR.fnPadText(col.LOC_HWY_NBR, '0', 4, 1) end +&#xA;isnull(col.LEGAL_CLASSIFICATION, ' ') + &#xA;case len(ltrim(isnull(col.LOC_INT_HWY_NBR, '')))&#xA;when 0 then '    '&#xA;else&#xA;case PATINDEX('%[A-Z]',col.LOC_INT_HWY_NBR)&#xA;when 0 then eCIR.fnPadText(eCIR.fnPadText(col.LOC_INT_HWY_NBR, '0', 3, 1), ' ', 4, 0)&#xA;else eCIR.fnPadText(col.LOC_INT_HWY_NBR, '0', 4, 1) end&#xA;end +&#xA;eCIR.fnPadText(col.LOC_STREET_AVE, ' ', 60, 0) +&#xA;eCIR.fnPadText(col.LOC_INT_STREET_AVE, ' ', 60, 0) +&#xA;case isnull(col.LOC_DISTANCE_KM_FLAG , 9) when 9 then '      '&#xA;else eCIR.fnPadText(cast(col.LOC_DISTANCE as varchar(10)), '0', 6, 1) end +&#xA;case isnull(col.LOC_DISTANCE_KM_FLAG , 9) when 9 then '  '&#xA;else &#xA;case isnull(col.LOC_NORTH_FLAG, 0) when 1 &#xA;then &#xA;&#xA;case isnull(col.LOC_EAST_FLAG, 0) when 1 then 'NE' else&#xA;case isnull(col.LOC_WEST_FLAG, 0) when 1 then 'NW' else 'N 'end end&#xA;&#xA;else &#xA;case isnull(col.LOC_SOUTH_FLAG, 0) when 1 then  &#xA;&#xA;case isnull(col.LOC_EAST_FLAG, 0) when 1 then 'SE' else&#xA;case isnull(col.LOC_WEST_FLAG, 0) when 1 then 'SW' else 'S 'end end&#xA;else&#xA;case isnull(col.LOC_EAST_FLAG, 0) when 1 then 'E ' else &#xA;case isnull(col.LOC_WEST_FLAG, 0) when 1 then 'W ' else '  '&#xA;end&#xA;end&#xA;end&#xA;end&#xA;end +&#xA;case isnull(col.LOC_DISTANCE_KM_FLAG , 9) when 9 then ' '&#xA;else &#xA;case isnull(col.LOC_DISTANCE_KM_FLAG,0) when 1 then 'K' else 'M' end&#xA;end + &#xA;case eCIR.fnIsDateNull(col.REPORTED_TIMESTAMP)&#xA;when 1 then eCIR.fnPadText('     ', ' ', 18,0)&#xA;else cast(datepart(yyyy,col.REPORTED_TIMESTAMP)as varchar(4))+'/'+eCIR.fnPadText(cast(datepart(mm,col.REPORTED_TIMESTAMP) as varchar(2)),'0',2,1)+'/'+eCIR.fnPadText(cast(datepart(dd,col.REPORTED_TIMESTAMP) as varchar(2)),'0',2,1) +&#xA;ecir.fnGetTimeStr(col.REPORTED_TIMESTAMP) end +&#xA;eCIR.fnGetCodeValueCode(col.FILE_STATUS_ID) +&#xA;eCIR.fnPadText(col.VEHICLES_NBR,'0',4,1)+&#xA;eCIR.fnPadText(col.INJURED_NBR,'0',4,1)+&#xA;eCIR.fnPadText(col.FATALITIES_NBR,'0',4,1)+&#xA;case isnull(col.HIT_AND_RUN_FLAG, -1) when -1 then ' ' when 1 then '1' else '2' end +&#xA;case isnull(col.SCENE_VISITED_FLAG, -1) when -1 then ' ' when 1 then '1' else '2' end +&#xA;'  ' + -- Special study blank for now&#xA;eCIR.fnPadText(col.PROP_DAMAGE_ONLY,'0',1,1) +&#xA;case isnull((select 1 from tims.CI_Roads_Less500_Vw where roadname = col.LOC_HWY_NBR), 0)&#xA;when 1 then &#xA;case isnull(col.RADIUS_OF_CURVE, 'x') when 'x' then eCIR.fnPadText('',' ',9,0) end&#xA;else replace(eCIR.fnPadText(col.RADIUS_OF_CURVE,'0',9,1), '000000000', '         ') end +&#xA;eCIR.fnPadText(col.DISTRICT_NAME,' ',40,0)+&#xA;isnull(col.ADDL_WITNESS, ' ') +&#xA;eCIR.fnPadText(col.UNIT_NBR,' ',10,0) +&#xA;case isnull(col.INV_REG_NBR, -1)&#xA;when -1 then '      '&#xA;when 0 then '      '&#xA;else eCIR.fnPadText(col.INV_REG_NBR,'0',6,1) end +&#xA;case isnull(col.APPROVER_REG_NBR, '-1')&#xA;when '-1' then '      '&#xA;when '0' then '      '&#xA;else replace(eCIR.fnPadText(col.APPROVER_REG_NBR,'0',6,1),'000000', '      ') end +&#xA;isnull(cast(datepart(yyyy,col.FATAL_REPORT_DATE)as varchar(4))+'/'+eCIR.fnPadText(cast(datepart(mm,col.FATAL_REPORT_DATE) as varchar(2)),'0',2,1)+'/'+eCIR.fnPadText(cast(datepart(dd,col.FATAL_REPORT_DATE) as varchar(2)),'0',2,1), '          ') +&#xA;isnull(cast(datepart(yyyy,col.ENG_NOTIFIED_DATE)as varchar(4))+'/'+eCIR.fnPadText(cast(datepart(mm,col.ENG_NOTIFIED_DATE) as varchar(2)),'0',2,1)+'/'+eCIR.fnPadText(cast(datepart(dd,col.ENG_NOTIFIED_DATE) as varchar(2)),'0',2,1), '          ') +&#xA;isnull(cast(datepart(yyyy,col.ENG_REPORT_DATE)as varchar(4))+'/'+eCIR.fnPadText(cast(datepart(mm,col.ENG_REPORT_DATE) as varchar(2)),'0',2,1)+'/'+eCIR.fnPadText(cast(datepart(dd,col.ENG_REPORT_DATE) as varchar(2)),'0',2,1), '          ') +&#xA;replace(eCIR.fnPadText(col.FATAL_POL_RCMP_CODE, '0', 4, 1), '0000', '    ') +&#xA;replace(eCIR.fnPadText(isnull(eCIR.fnGetCodeValueCode(plot.COLLISION_SUB_TYPE_ID), '0000'), '0', 4, 1), '0000', '    ') +&#xA;replace(eCIR.fnPadText(eCIR.fnGetCodeValueCode(plot.VEHICLE_DIRECTION_ID), '0', 2, 1),'00', '  ') +&#xA;replace(eCIR.fnPadText(eCIR.fnGetCodeValueCode(plot.VEHICLE2_DIRECTION_ID), '0', 2, 1), '00', '  ') +&#xA;replace(eCIR.fnPadText(eCIR.fnGetCodeValueCode(plot.VEHICLE_MANUVER_ID), '0', 2, 1), '00', '  ') +&#xA;replace(eCIR.fnPadText(eCIR.fnGetCodeValueCode(plot.VEHICLE2_MANUVER_ID), '0', 2, 1), '00', '  ') +&#xA;eCIR.fnPadText(col.LOC_REF_STREET_AVE, ' ', 25, 0)+&#xA;replace(eCIR.fnPadText(col.LOC_REF_SPECIAL_DESC, ' ', 60, 0), '&quot;', '''') +&#xA;case isnull(plot.HIGHWAY, '~')&#xA;when '~' then '    ' else&#xA;case PATINDEX('%[A-Z]',plot.HIGHWAY)&#xA;when 0 then eCIR.fnPadText(replace(eCIR.fnPadText(plot.HIGHWAY, '0', 3, 1),'000', ' '), ' ', 4, 0)&#xA;else eCIR.fnPadText(plot.HIGHWAY, '0', 4, 1) end end +&#xA;case isnull(plot.CONTROL_SECTION, -1) when -1 then '   '&#xA;else eCIR.fnPadText(plot.CONTROL_SECTION,'0',3,1) end +&#xA;case isnull(plot.SAFETY_SUB_SECTION, -1) when -1 then '   '&#xA;else eCIR.fnPadText(plot.SAFETY_SUB_SECTION,'0',3,1) end +&#xA;replace(eCIR.fnPadText(cast(plot.KM_POST as varchar),'0',7,1) + '0','00000000', '        ')  +&#xA;eCIR.fnGetLatLongStr(col.LOC_GPS_LAT) +&#xA;eCIR.fnGetLatLongStr(col.LOC_GPS_LONG) +&#xA;eCIR.fnPadText(plot.STRUCTURE_ID, ' ', 14, 0) +&#xA;replace(eCIR.fnPadText(cast(plot.OT_SHOULDER_WIDTH as varchar), '0', 6,1),'000000', '      ') +&#xA;replace(eCIR.fnPadText(cast(plot.IN_SHOULDER_WIDTH as varchar), '0', 7,1),'0000000', '       ') +&#xA;replace(eCIR.fnPadText(cast(plot.SURFACE_WIDTH as varchar), '0', 8,1),'00000000', '        ') +&#xA;replace(eCIR.fnPadText(cast(plot.MEDIAN_WIDTH as varchar), '0', 6,1),'000000', '      ') +&#xA;replace(eCIR.fnPadText(plot.AADT, '0', 9,1),'000000000', '         ') +&#xA;replace(eCIR.fnPadText(plot.AADT_YEAR, '0', 4,1),'0000', '    ') +&#xA;replace(eCIR.fnPadText(plot.SPEED_DAY, '0', 3,1),'000', '   ') +&#xA;replace(eCIR.fnPadText(plot.SPEED_NIGHT, '0', 3,1),'000', '   ') +&#xA;replace(eCIR.fnPadText(plot.HWY_TYPE, ' ', 2, 0),'00', '  ') + &#xA;replace(eCIR.fnPadText(plot.ROAD_SURFACE_TYPE, ' ', 2, 0),'00', '  ') + &#xA;replace(eCIR.fnPadText(plot.SHLDR_SURFACE_TYPE, ' ', 2, 0),'00', '  ') + &#xA;isnull(plot.URBAN_RURAL, ' ') +&#xA;eCIR.fnPadText(plot.FROM_LOCATION, ' ', 60, 0) +&#xA;eCIR.fnPadText(plot.TO_LOCATION, ' ', 60, 0) +&#xA;case isnull(col.ROAD_ALIGNMENT_A_ID, -9999)&#xA;when -9999 then '  '&#xA;else eCIR.fnPadText(eCIR.fnGetCodeValueCode(col.ROAD_ALIGNMENT_A_ID), '0', 2, 1) end +&#xA;case isnull(col.ROAD_ALIGNMENT_B_ID, -9999)&#xA;when -9999 then '  '&#xA;else eCIR.fnPadText(eCIR.fnGetCodeValueCode(col.ROAD_ALIGNMENT_B_ID), '0', 2, 1) end +&#xA;replace(eCIR.fnPadText(eCIR.fnGetCodeValueCode(plot.INTERSECTION_TYPE_ID), '0', 2, 1), '00', '  ') +&#xA;replace(eCIR.fnPadText(eCIR.fnGetCodeValueCode(col.SEVERITY_OF_COLLISION_ID), '0', 2, 1), '00', '  ') +&#xA;replace(eCIR.fnPadText(eCIR.fnGetCodeValueCode(col.COLLISION_LOCATION_ID), '0', 2, 1), '00', '  ') +&#xA;replace(eCIR.fnPadText(eCIR.fnGetCodeValueCode(col.PRIMARY_EVENT_ID), '0', 2, 1), '00', '  ') +&#xA;replace(eCIR.fnPadText(eCIR.fnGetCodeValueCode(col.ROAD_CLASS_ID), '0', 2, 1), '00', '  ') +&#xA;replace(eCIR.fnPadText(eCIR.fnGetCodeValueCode(col.SPECIAL_FACILITY_ID), '0', 2, 1), '00', '  ') +&#xA;replace(eCIR.fnPadText(eCIR.fnGetCodeValueCode(col.ENVIRONMENTAL_CONDITION_ID), '0', 2, 1), '00', '  ') +&#xA;replace(eCIR.fnPadText(eCIR.fnGetCodeValueCode(col.SURFACE_COND_ID), '0', 2, 1), '00', '  ') +&#xA;eCIR.fnPadText('                                                                                          ', ' ', 96, 0)&#xA;&#xA;from ecrdba.collisions col &#xA;left outer join ECRDBA.ECR_COLL_PLOTTING_INFO plot on col.id = plot.COLLISION_ID,&#xA;ecir.ci_current_flatfile_year ff&#xA;where ff.YearId = 1 and ff.InProgressFlag = 1&#xA;and col.CASE_YEAR = ff.FlatfileYear&#xA;order by col.ID desc&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Sequence Container\Generate Object Involved\Update FLAT_FILES_REPO entry as Complete"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:Disabled="True"
              DTS:DTSID="{2be805ab-2fec-4cd6-a817-07afe1bde193}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Update FLAT_FILES_REPO entry as Complete"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="3">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{67DF6BBB-0440-40D8-A8AB-57E8A7F0CBF4}"
                  SQLTask:SqlStatementSource="update eCIR.flat_files_repo&#xA;set status='Complete'&#xA;where year=@useReportYear and fileversion=@useNewFileVersion&#xA;and type='CollisionExtract'" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="@useReportYear"
                    SQLTask:DtsVariableName="User::ReportYear"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="11"
                    SQLTask:ParameterSize="4" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="@useNewFileVersion"
                    SQLTask:DtsVariableName="User::NewFileVersion"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="11"
                    SQLTask:ParameterSize="4" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Sequence Container\Generate Pedestrian Driver Extract"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:DTSID="{4cc878bd-d6ef-4fd8-b114-c04b6e25715f}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="-1"
          DTS:ObjectName="Generate Pedestrian Driver Extract">
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Sequence Container\Generate Pedestrian Driver Extract\Generate FLAT_FILES_REPO entry"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{02d0c3d7-6554-403f-9681-0947c1332475}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Generate FLAT_FILES_REPO entry"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{67DF6BBB-0440-40D8-A8AB-57E8A7F0CBF4}"
                  SQLTask:SqlStatementSource="Insert Into eCIR.flat_files_repo(year, name, type, CreatedDate, FileVersion, Status,CreatedBy)&#xA;Values(@useReportYear, '3_DriverPedestrianExtract.txt', 'PedestrianExtract', getDate(), @useNewFileVersion,'Pending',(select username from eCIR.CI_Current_Flatfile_Year where YearId=1))&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="@useReportYear"
                    SQLTask:DtsVariableName="User::ReportYear"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="11"
                    SQLTask:ParameterSize="4" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="@useNewFileVersion"
                    SQLTask:DtsVariableName="User::NewFileVersion"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="11"
                    SQLTask:ParameterSize="4" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Sequence Container\Generate Pedestrian Driver Extract\Get flatFileId"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{e1a4e883-2a40-49a8-b4f7-2c6512dc8c29}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Get flatFileId"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{67DF6BBB-0440-40D8-A8AB-57E8A7F0CBF4}"
                  SQLTask:SqlStatementSource="SELECT cast(flatfileid as integer) as FlatFileId&#xA;from eCIR.flat_files_repo&#xA;where year=@useReportYear&#xA;and FileVersion = @useNewFileVersion&#xA;and type='PedestrianExtract'"
                  SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ResultBinding
                    SQLTask:ResultName="0"
                    SQLTask:DtsVariableName="User::FlatFileId" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="@useReportYear"
                    SQLTask:DtsVariableName="User::ReportYear"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="11"
                    SQLTask:ParameterSize="4" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="@useNewFileVersion"
                    SQLTask:DtsVariableName="User::NewFileVersion"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="11"
                    SQLTask:ParameterSize="4" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Sequence Container\Generate Pedestrian Driver Extract\Insert flat file records into flat file content table 3"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{fddc903b-d2f1-4196-b4b5-1423bf19e0ee}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Insert flat file records into flat file content table 3"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{67DF6BBB-0440-40D8-A8AB-57E8A7F0CBF4}"
                  SQLTask:SqlStatementSource="insert into ecir.FLAT_FILES_REPO_CONTENTS&#xA;(FLATFILEREPO_ID, case_year, case_nbr,seq_nbr,content)&#xA;select&#xA;--top 100&#xA;(select max(ffr.FlatFileId) from ecir.FLAT_FILES_REPO ffr) as flatfileid,&#xA;col.case_year,&#xA;eCIR.fnPadText(col.CASE_NBR, ' ', 8, 0),&#xA;--eCIR.fnPadNumber(obj.SEQ_NBR, '0', 3, 1),&#xA;eCIR.fnGetACISSequence(col.CASE_YEAR,obj.SEQ_NBR, obj.PARENT_OBJECT_ID),&#xA;(&#xA;eCIR.fnGetObjectParty(obj.PARTY_ID) +&#xA;isnull(obj.OBJ_IS_PERSON, eCIR.fnGetObjIsPerson(ot.CODE, col.case_year)) +&#xA;isnull(obj.OBJ_IS_VEHICLE, ecir.fnGetObjIsVehicle(ot.code, col.case_year)) +&#xA;isnull(obj.OBJ_IS_MOVING_VEHICLE, ecir.fnGetObjIsMovingVehicle(ot.code, col.case_year)) +&#xA;eCIR.fnPadText(ot.CODE, '0', 2, 1) +&#xA;case isnull(party.OPERATED_PROPERTY_ID, -1)&#xA;when -1 then case when eCIR.fnPadText(ot.CODE, '0', 2, 1) = '02' then '07' else replace(eCIR.fnPadText(ctv2.CODE, '0', 2, 1), '00', '  ') end +&#xA;replace(eCIR.fnPadText(isnull(eCIR.fnGetCodeValueCode(prop2.ATTACHMENT_ID), '^^'), '0', 2, 1), '^^', '  ')&#xA;else replace(eCIR.fnPadText(ctv.CODE, '0', 2, 1), '00', '  ') +&#xA;replace(eCIR.fnPadText(isnull(eCIR.fnGetCodeValueCode(prop.ATTACHMENT_ID), '^^'), '0', 2, 1), '^^', '  ') end +&#xA;replace(eCIR.fnPadText(isnull(eCIR.fnGetCodeValueCode(obj.LIGHT_COND_A_ID), '^^'), '0', 2, 1), '^^', '  ') +&#xA;replace(eCIR.fnPadText(isnull(eCIR.fnGetCodeValueCode(obj.LIGHT_COND_B_ID), '^^'), '0', 2, 1), '^^', '  ') +&#xA;replace(eCIR.fnPadText(isnull(eCIR.fnGetCodeValueCode(obj.CONTRIB_ROAD_COND_ID), '^^'), '0', 2, 1), '^^', '  ') +&#xA;replace(eCIR.fnPadText(isnull(eCIR.fnGetCodeValueCode(party.DRIVER_ACTION_ID), '^^'), '0', 2, 1), '^^', '  ') +&#xA;case isnull(party.OPERATED_PROPERTY_ID, -1)&#xA;when -1 then eCIR.fnPadText(replace(isnull(dgc2.CLASS_CODE,''),'.',''), ' ',2,1)&#xA;else eCIR.fnPadText(replace(isnull(dgc.CLASS_CODE,''),'.',''), ' ',2,1) end +&#xA;replace(eCIR.fnPadText(isnull(eCIR.fnGetCodeValueCode(party.DRIVER_PEDESTR_COND_ID), '^^'), '0', 2, 1), '^^', '  ') +&#xA;case isnull(party.OPERATED_PROPERTY_ID, -1)&#xA;when -1 then replace(eCIR.fnPadText(isnull(eCIR.fnGetCodeValueCode(prop2.LOAD_DETAIL_A_ID), '^^'), '0', 2, 1), '^^', '  ') +&#xA;replace(eCIR.fnPadText(isnull(eCIR.fnGetCodeValueCode(prop2.LOAD_DETAIL_B_ID), '^^'), '0', 2, 1), '^^', '  ') +&#xA;replace(eCIR.fnPadText(isnull(eCIR.fnGetCodeValueCode(prop2.INITIAL_POINT_OF_IMPACT_ID), '^^'), '0', 2, 1), '^^', '  ') +&#xA;replace(eCIR.fnPadText(isnull(eCIR.fnGetCodeValueCode(prop2.INITIAL_POINT_OF_IMPACT2_ID), '^^'), '0', 2, 1), '^^', '  ') +&#xA;replace(eCIR.fnPadText(isnull(eCIR.fnGetCodeValueCode(prop2.INITIAL_POINT_OF_IMPACT3_ID), '^^'), '0', 2, 1), '^^', '  ')&#xA;else replace(eCIR.fnPadText(isnull(eCIR.fnGetCodeValueCode(prop.LOAD_DETAIL_A_ID), '^^'), '0', 2, 1), '^^', '  ') +&#xA;replace(eCIR.fnPadText(isnull(eCIR.fnGetCodeValueCode(prop.LOAD_DETAIL_B_ID), '^^'), '0', 2, 1), '^^', '  ')  +&#xA;replace(eCIR.fnPadText(isnull(eCIR.fnGetCodeValueCode(prop.INITIAL_POINT_OF_IMPACT_ID), '^^'), '0', 2, 1), '^^', '  ') +&#xA;replace(eCIR.fnPadText(isnull(eCIR.fnGetCodeValueCode(prop.INITIAL_POINT_OF_IMPACT2_ID), '^^'), '0', 2, 1), '^^', '  ') +&#xA;replace(eCIR.fnPadText(isnull(eCIR.fnGetCodeValueCode(prop.INITIAL_POINT_OF_IMPACT3_ID), '^^'), '0', 2, 1), '^^', '  ') end +&#xA;replace(eCIR.fnPadText(isnull(eCIR.fnGetCodeValueCode(obj.TRAFFIC_CTRL_DEVC_COND_ID), '^^'), '0', 2, 1), '^^', '  ') +&#xA;replace(eCIR.fnPadText(isnull(eCIR.fnGetCodeValueCode(obj.TRAFFIC_CTRL_DEVICE_ID), '^^'), '0', 2, 1), '^^', '  ') +&#xA;replace(eCIR.fnPadText(isnull(eCIR.fnGetCodeValueCode(party.PEDESTR_ACTION_ID), '^^'), '0', 2, 1), '^^', '  ') +&#xA;case isnull(party.OPERATED_PROPERTY_ID, -1)&#xA;when -1 then replace(eCIR.fnPadText(isnull(eCIR.fnGetCodeValueCode(prop2.TRAILER_TYPE_ID), '^^'), '0', 2, 1), '^^', '  ')&#xA;else replace(eCIR.fnPadText(isnull(eCIR.fnGetCodeValueCode(prop.TRAILER_TYPE_ID), '^^'), '0', 2, 1), '^^', '  ') end +&#xA;replace(eCIR.fnPadText(isnull(eCIR.fnGetCodeValueCode(party.UNSAFE_SPEED_ID), '^^'), '0', 2, 1), '^^', '  ') +&#xA;case isnull(party.OPERATED_PROPERTY_ID, -1)&#xA;when -1 then&#xA;replace(eCIR.fnPadText(isnull(eCIR.fnGetCodeValueCode(prop2.VEH_COND_CONTRIB_ID), '^^'), '0', 2, 1), '^^', '  ') +&#xA;replace(eCIR.fnPadText(isnull(eCIR.fnGetCodeValueCode(prop2.VEHICLE_REPARABLE_ID), '^^'), '0', 2, 1), '^^', '  ') +&#xA;case PATINDEX('Z%',col.case_nbr)&#xA;when 1 then&#xA;replace(eCIR.fnPadText(isnull(eCIR.fnGetCodeValueCode(obj.ENVIRONMENTAL_CONDITION_ID), '^^'), '0', 2, 1), '^^', '  ') +&#xA;replace(eCIR.fnPadText(isnull(eCIR.fnGetCodeValueCode(obj.SURFACE_COND_ID), '^^'), '0', 2, 1), '^^', '  ')&#xA;else&#xA;replace(eCIR.fnPadText(isnull(eCIR.fnGetCodeValueCode(col.ENVIRONMENTAL_CONDITION_ID), '^^'), '0', 2, 1), '^^', '  ') +&#xA;replace(eCIR.fnPadText(isnull(eCIR.fnGetCodeValueCode(col.SURFACE_COND_ID), '^^'), '0', 2, 1), '^^', '  ')&#xA;end&#xA;&#xA;else&#xA;replace(eCIR.fnPadText(isnull(eCIR.fnGetCodeValueCode(prop.VEH_COND_CONTRIB_ID), '^^'), '0', 2, 1), '^^', '  ') +&#xA;replace(eCIR.fnPadText(isnull(eCIR.fnGetCodeValueCode(prop.VEHICLE_REPARABLE_ID), '^^'), '0', 2, 1), '^^', '  ') +&#xA;case PATINDEX('Z%',col.case_nbr)&#xA;when 1 then&#xA;replace(eCIR.fnPadText(isnull(eCIR.fnGetCodeValueCode(obj.ENVIRONMENTAL_CONDITION_ID), '^^'), '0', 2, 1), '^^', '  ') +&#xA;replace(eCIR.fnPadText(isnull(eCIR.fnGetCodeValueCode(obj.SURFACE_COND_ID), '^^'), '0', 2, 1), '^^', '  ')&#xA;else&#xA;replace(eCIR.fnPadText(isnull(eCIR.fnGetCodeValueCode(col.ENVIRONMENTAL_CONDITION_ID), '^^'), '0', 2, 1), '^^', '  ') +&#xA;replace(eCIR.fnPadText(isnull(eCIR.fnGetCodeValueCode(col.SURFACE_COND_ID), '^^'), '0', 2, 1), '^^', '  ')&#xA;end end&#xA;) &#xA;as rec&#xA;from ecrdba.cl_objects obj &#xA;left outer join ecrdba.CLOBJ_PARTY_INFO party on obj.PARTY_ID = party.ID&#xA;left outer join ecrdba.CLOBJ_PROPERTY_INFO prop on party.OPERATED_PROPERTY_ID  = prop.ID&#xA;left outer join ecrdba.object_types ot on obj.OBJECT_TYPE_ID = ot.ID&#xA;left outer join ecrdba.CODE_TYPE_VALUES ctv on prop.OBJECT_IDENTIFICATION_TYPE_ID = ctv.ID&#xA;left outer join ecrdba.CLOBJ_PROPERTY_INFO prop2 on obj.PROPERTY_ID = prop2.ID&#xA;left outer join ecrdba.CODE_TYPE_VALUES ctv2 on prop2.OBJECT_IDENTIFICATION_TYPE_ID = ctv2.ID&#xA;left outer join ecrdba.DANGEROUS_GOODS_CLASS dgc on prop.DG_CLASS = dgc.ID&#xA;left outer join ecrdba.DANGEROUS_GOODS_CLASS dgc2 on prop2.DG_CLASS = dgc2.ID,&#xA;ecrdba.collisions col,&#xA;ecir.ci_current_flatfile_year ff&#xA;where ff.YearId = 1 and ff.InProgressFlag = 1&#xA;and col.CASE_YEAR = ff.FlatfileYear&#xA;and obj.COLLISION_ID = col.ID&#xA;and obj.PARENT_OBJECT_ID is null&#xA;--and party.id is not null&#xA;order by col.CASE_NBR, eCIR.fnGetACISSequence(col.CASE_YEAR,obj.SEQ_NBR, obj.PARENT_OBJECT_ID)&#xA;--obj.id desc&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Sequence Container\Generate Pedestrian Driver Extract\Update FLAT_FILES_REPO entry as Complete"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{41001cf6-f5f1-48e4-8c1d-2cddb254ed77}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Update FLAT_FILES_REPO entry as Complete"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{67DF6BBB-0440-40D8-A8AB-57E8A7F0CBF4}"
                  SQLTask:SqlStatementSource="update eCIR.flat_files_repo&#xA;set status='Complete'&#xA;where year=@useReportYear and fileversion=@useNewFileVersion&#xA;and type='PedestrianExtract'" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="@useReportYear"
                    SQLTask:DtsVariableName="User::ReportYear"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="11"
                    SQLTask:ParameterSize="4" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="@useNewFileVersion"
                    SQLTask:DtsVariableName="User::NewFileVersion"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="11"
                    SQLTask:ParameterSize="4" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Sequence Container\Generate Pedestrian Driver Extract\Update FLAT_FILES_REPO entry as Failed"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{55d6721f-5496-427f-a79c-a7323bd1a07b}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Update FLAT_FILES_REPO entry as Failed"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="1">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{67DF6BBB-0440-40D8-A8AB-57E8A7F0CBF4}"
                  SQLTask:SqlStatementSource="update eCIR.flat_files_repo&#xA;set status='Failed'&#xA;where year=@useReportYear and fileversion=@useNewFileVersion &#xA;and type='PedestrianExtract'" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="@useReportYear"
                    SQLTask:DtsVariableName="User::ReportYear"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="11"
                    SQLTask:ParameterSize="4" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="@useNewFileVersion"
                    SQLTask:DtsVariableName="User::NewFileVersion"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="11"
                    SQLTask:ParameterSize="10" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Sequence Container\Generate Pedestrian Driver Extract.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{120cdb97-9568-4a93-9398-31d15c61844c}"
              DTS:From="Package\Sequence Container\Generate Pedestrian Driver Extract\Insert flat file records into flat file content table 3"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\Sequence Container\Generate Pedestrian Driver Extract\Update FLAT_FILES_REPO entry as Complete" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Sequence Container\Generate Pedestrian Driver Extract.PrecedenceConstraints[Constraint 1]"
              DTS:CreationName=""
              DTS:DTSID="{142fb300-20ff-4a97-ac8a-9218e36d829b}"
              DTS:From="Package\Sequence Container\Generate Pedestrian Driver Extract\Get flatFileId"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 1"
              DTS:To="Package\Sequence Container\Generate Pedestrian Driver Extract\Insert flat file records into flat file content table 3" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Sequence Container\Generate Pedestrian Driver Extract.PrecedenceConstraints[Constraint 2]"
              DTS:CreationName=""
              DTS:DTSID="{91134C1C-D836-4A74-BAE5-5AA7942EFB38}"
              DTS:From="Package\Sequence Container\Generate Pedestrian Driver Extract\Insert flat file records into flat file content table 3"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 2"
              DTS:To="Package\Sequence Container\Generate Pedestrian Driver Extract\Update FLAT_FILES_REPO entry as Failed"
              DTS:Value="1" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Sequence Container\Generate Pedestrian Driver Extract.PrecedenceConstraints[Constraint 3]"
              DTS:CreationName=""
              DTS:DTSID="{09405ce7-06ce-4f78-9967-5205022ca222}"
              DTS:From="Package\Sequence Container\Generate Pedestrian Driver Extract\Generate FLAT_FILES_REPO entry"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 3"
              DTS:To="Package\Sequence Container\Generate Pedestrian Driver Extract\Get flatFileId" />
          </DTS:PrecedenceConstraints>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Sequence Container\Generate Witness Extract 1"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:DTSID="{9735eb6d-3696-4739-ba05-ee9410c76a07}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="-1"
          DTS:ObjectName="Generate Witness Extract 1">
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Sequence Container\Generate Witness Extract 1\Generate FLAT_FILES_REPO entry"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{c193865a-f518-40bc-a5a2-9be98ff95370}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Generate FLAT_FILES_REPO entry"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{67DF6BBB-0440-40D8-A8AB-57E8A7F0CBF4}"
                  SQLTask:SqlStatementSource="insert into eCIR.flat_files_repo&#xA;(year, name, type, CreatedDate, FileVersion, Status,CreatedBy)&#xA;VALUES(@useReportYear, '5_WitnessExtract.txt', 'WitnessExtract', getDate(), @useNewFileVersion,'Pending',(select username from eCIR.CI_Current_Flatfile_Year where YearId=1))&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="@useReportYear"
                    SQLTask:DtsVariableName="User::ReportYear"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="11"
                    SQLTask:ParameterSize="4" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="@useNewFileVersion"
                    SQLTask:DtsVariableName="User::NewFileVersion"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="11"
                    SQLTask:ParameterSize="4" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Sequence Container\Generate Witness Extract 1\Get flatFileId"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{3d9e4c46-ef45-4677-9c58-2bf4be87a25c}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Get flatFileId"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{67DF6BBB-0440-40D8-A8AB-57E8A7F0CBF4}"
                  SQLTask:SqlStatementSource="SELECT cast(flatfileid as integer) as FlatFileId&#xA;from eCIR.flat_files_repo&#xA;where year=@useReportYear&#xA;and FileVersion = @useNewFileVersion&#xA;and type='WitnessExtract'"
                  SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ResultBinding
                    SQLTask:ResultName="0"
                    SQLTask:DtsVariableName="User::FlatFileId" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="@useReportYear"
                    SQLTask:DtsVariableName="User::ReportYear"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="11"
                    SQLTask:ParameterSize="4" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="@useNewFileVersion"
                    SQLTask:DtsVariableName="User::NewFileVersion"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="11"
                    SQLTask:ParameterSize="4" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Sequence Container\Generate Witness Extract 1\Insert flat file records into flat file content table 5"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{3ebc1f47-aa5e-4c20-a5cb-2d2aa2ee61f8}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Insert flat file records into flat file content table 5"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{67DF6BBB-0440-40D8-A8AB-57E8A7F0CBF4}"
                  SQLTask:SqlStatementSource="insert into ecir.FLAT_FILES_REPO_CONTENTS&#xA;(FLATFILEREPO_ID, case_year, case_nbr,seq_nbr,content)&#xA;--(FLATFILEREPO_ID, content)&#xA;select&#xA;--top 100&#xA;(select max(ffr.FlatFileId) from ecir.FLAT_FILES_REPO ffr) as flatfileid,&#xA;tmp.case_year,&#xA;eCIR.fnPadText(tmp.CASE_NBR, ' ', 8, 0),&#xA;eCIR.fnPadNumber(isnull(cast(tmp.WITNESS_NBR as numeric), eCIR.fnGetWitnessSeq(tmp.collId, tmp.id)),' ', 1, 0),&#xA;--cast(tmp.CASE_YEAR as varchar(4)) +&#xA;--eCIR.fnPadText(tmp.CASE_NBR, ' ', 8, 0) +&#xA;--cast(tmp.witness_nbr as varchar(100)) +&#xA;--tmp.witness_nbr +&#xA;eCIR.fnPadText(tmp.LAST_NAME, ' ', 25, 0) +&#xA;eCIR.fnPadText(tmp.FIRST_NAME, ' ', 15, 0) +&#xA;eCIR.fnPadText(tmp.MIDDLE_NAME, ' ', 2, 0) +&#xA;eCIR.fnPadText(tmp.ADDRESS, ' ', 25, 0) +&#xA;eCIR.fnPadText(tmp.CITY, ' ', 25, 0) +&#xA;eCIR.fnPadText(tmp.PROVINCE, ' ', 2, 0) +&#xA;eCIR.fnPadText(tmp.POSTAL_CODE, ' ', 10, 0) +&#xA;case len(isnull(tmp.HOME_PHONE_NBR, ''))&#xA;when 3 then eCIR.fnPadText(tmp.HOME_PHONE_NBR, ' ', 10, 0)&#xA;else eCIR.fnPadText(tmp.HOME_PHONE_NBR, ' ', 10, 1) end +&#xA;case len(isnull(tmp.WORK_PHONE_NBR, ''))&#xA;when 3 then eCIR.fnPadText(tmp.WORK_PHONE_NBR, ' ', 10, 0)&#xA;else eCIR.fnPadText(tmp.WORK_PHONE_NBR, ' ', 10, 1) end&#xA;from &#xA;(&#xA;select&#xA;    wit.id,&#xA;    coll.CASE_YEAR, &#xA;    coll.CASE_NBR, &#xA;    wit.witness_nbr,&#xA;    party.LAST_NAME,&#xA;    party.FIRST_NAME,&#xA;    party.MIDDLE_NAME,&#xA;    party.ADDRESS,&#xA;    party.CITY,&#xA;    party.PROVINCE,&#xA;    party.POSTAL_CODE,&#xA;    party.HOME_PHONE_NBR,&#xA;    party.WORK_PHONE_NBR,&#xA;    coll.id as collId&#xA;from ecrdba.collisions coll&#xA;inner join  ecrdba.CL_WITNESSES wit &#xA;      on Coll.id = wit.COLLISION_ID&#xA;inner join  ECRDBA.CLOBJ_PARTY_INFO party &#xA;      on wit.party_id = party.id,&#xA;ecir.ci_current_flatfile_year ff&#xA;where ff.YearId = 1 and ff.InProgressFlag = 1&#xA;and coll.CASE_YEAR = ff.FlatfileYear&#xA;) tmp&#xA;order by CASE_NBR, id asc&#xA;&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Sequence Container\Generate Witness Extract 1\Update FLAT_FILES_REPO entry as Complete"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{071ae886-d00f-4fd0-8911-41b8605f1bc2}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Update FLAT_FILES_REPO entry as Complete"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{67DF6BBB-0440-40D8-A8AB-57E8A7F0CBF4}"
                  SQLTask:SqlStatementSource="update eCIR.flat_files_repo&#xA;set status='Complete'&#xA;where year=@useReportYear and fileversion=@useNewFileVersion&#xA;and type='WitnessExtract'" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="@useReportYear"
                    SQLTask:DtsVariableName="User::ReportYear"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="11"
                    SQLTask:ParameterSize="4" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="@useNewFileVersion"
                    SQLTask:DtsVariableName="User::NewFileVersion"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="11"
                    SQLTask:ParameterSize="4" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Sequence Container\Generate Witness Extract 1\Update FLAT_FILES_REPO entry as Failed"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{d9aea4e9-0e0e-4264-a605-953d2a738e22}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Update FLAT_FILES_REPO entry as Failed"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="1">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{67DF6BBB-0440-40D8-A8AB-57E8A7F0CBF4}"
                  SQLTask:SqlStatementSource="update eCIR.flat_files_repo&#xA;set status='Failed'&#xA;where year=@useReportYear and fileversion=@useNewFileVersion&#xA;and type='WitnessExtract'" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="@useReportYear"
                    SQLTask:DtsVariableName="User::ReportYear"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="11"
                    SQLTask:ParameterSize="4" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="@useNewFileVersion"
                    SQLTask:DtsVariableName="User::NewFileVersion"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="11"
                    SQLTask:ParameterSize="4" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Sequence Container\Generate Witness Extract 1.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{97a56193-2bb7-409c-b5fa-7488580f2ad3}"
              DTS:From="Package\Sequence Container\Generate Witness Extract 1\Insert flat file records into flat file content table 5"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\Sequence Container\Generate Witness Extract 1\Update FLAT_FILES_REPO entry as Complete" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Sequence Container\Generate Witness Extract 1.PrecedenceConstraints[Constraint 1]"
              DTS:CreationName=""
              DTS:DTSID="{c6d3c002-444c-42e0-aea6-71a295d91551}"
              DTS:From="Package\Sequence Container\Generate Witness Extract 1\Get flatFileId"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 1"
              DTS:To="Package\Sequence Container\Generate Witness Extract 1\Insert flat file records into flat file content table 5" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Sequence Container\Generate Witness Extract 1.PrecedenceConstraints[Constraint 2]"
              DTS:CreationName=""
              DTS:DTSID="{37062398-A194-4678-AEE9-1E59594104FA}"
              DTS:From="Package\Sequence Container\Generate Witness Extract 1\Insert flat file records into flat file content table 5"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 2"
              DTS:To="Package\Sequence Container\Generate Witness Extract 1\Update FLAT_FILES_REPO entry as Failed"
              DTS:Value="1" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Sequence Container\Generate Witness Extract 1.PrecedenceConstraints[Constraint 3]"
              DTS:CreationName=""
              DTS:DTSID="{182cb760-5b65-40af-8e19-51988805c28d}"
              DTS:From="Package\Sequence Container\Generate Witness Extract 1\Generate FLAT_FILES_REPO entry"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 3"
              DTS:To="Package\Sequence Container\Generate Witness Extract 1\Get flatFileId" />
          </DTS:PrecedenceConstraints>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Sequence Container\GenerateVehicle Extract"
          DTS:CreationName="STOCK:SEQUENCE"
          DTS:Description="Sequence Container"
          DTS:DTSID="{419568ca-f9f8-4ea6-a33b-18631e6e2cfc}"
          DTS:ExecutableType="STOCK:SEQUENCE"
          DTS:LocaleID="-1"
          DTS:ObjectName="GenerateVehicle Extract">
          <DTS:Variables />
          <DTS:Executables>
            <DTS:Executable
              DTS:refId="Package\Sequence Container\GenerateVehicle Extract\Generate FLAT_FILES_REPO entry"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{693bb67a-7b2e-4238-93de-26e6057fcf07}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Generate FLAT_FILES_REPO entry"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{67DF6BBB-0440-40D8-A8AB-57E8A7F0CBF4}"
                  SQLTask:SqlStatementSource="insert into eCIR.flat_files_repo&#xA;(year, name, type, CreatedDate, FileVersion, Status,CreatedBy)&#xA;VALUES(@useReportYear, '4_VehicleExtract.txt', 'VehicleExtract', getDate(), @useNewFileVersion,'Pending',(select username from eCIR.CI_Current_Flatfile_Year where YearId=1))&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="@useReportYear"
                    SQLTask:DtsVariableName="User::ReportYear"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="11"
                    SQLTask:ParameterSize="4" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="@useNewFileVersion"
                    SQLTask:DtsVariableName="User::NewFileVersion"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="11"
                    SQLTask:ParameterSize="4" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Sequence Container\GenerateVehicle Extract\Get flatFileId"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{63c2cf4b-c629-4a70-9f14-0ca1c75f4116}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Get flatFileId"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{67DF6BBB-0440-40D8-A8AB-57E8A7F0CBF4}"
                  SQLTask:SqlStatementSource="SELECT cast(flatfileid as integer) as FlatFileId&#xA;from eCIR.flat_files_repo&#xA;where year=@useReportYear&#xA;and FileVersion = @useNewFileVersion&#xA;and type='VehicleExtract'"
                  SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ResultBinding
                    SQLTask:ResultName="0"
                    SQLTask:DtsVariableName="User::FlatFileId" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="@useReportYear"
                    SQLTask:DtsVariableName="User::ReportYear"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="11"
                    SQLTask:ParameterSize="4" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="@useNewFileVersion"
                    SQLTask:DtsVariableName="User::NewFileVersion"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="11"
                    SQLTask:ParameterSize="4" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Sequence Container\GenerateVehicle Extract\Insert flat file records into flat file content table 4"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{872814e5-2472-46c6-8dd2-db907372ae54}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Insert flat file records into flat file content table 4"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{67DF6BBB-0440-40D8-A8AB-57E8A7F0CBF4}"
                  SQLTask:SqlStatementSource="insert into ecir.FLAT_FILES_REPO_CONTENTS&#xA;--(FLATFILEREPO_ID, content)&#xA;(FLATFILEREPO_ID, case_year, case_nbr,seq_nbr,content)&#xA;select&#xA;--top 100&#xA;(select max(ffr.FlatFileId) from ecir.FLAT_FILES_REPO ffr) as flatfileid,&#xA;tmp.case_year,&#xA;eCIR.fnPadText(tmp.CASE_NBR, ' ', 8, 0),&#xA;--eCIR.fnPadNumber(tmp.SEQ_NBR, '0', 3, 1),&#xA;eCIR.fnGetACISSequence(tmp.CASE_YEAR,tmp.SEQ_NBR, tmp.PARENT_OBJECT_ID),&#xA;--cast(tmp.CASE_YEAR as varchar(4)) +&#xA;--eCIR.fnPadText(tmp.CASE_NBR, ' ', 8, 0) +&#xA;--eCIR.fnPadNumber(tmp.SEQ_NBR, '0', 3, 1) +&#xA;replace(eCIR.fnPadText(cast(tmp.YEAR as varchar(4)), '0', 4, 1),'0000','    ') +&#xA;eCIR.fnPadText(tmp.MAKE, ' ', 15, 0) +&#xA;eCIR.fnPadText(tmp.MODEL, ' ', 15, 0) +&#xA;eCIR.fnPadText(tmp.COLOR, ' ', 10, 0)+&#xA;eCIR.fnPadText(tmp.LICENCE_PLATE_NBR, ' ', 8, 0) +&#xA;eCIR.fnPadText(tmp.LIC_PLATE_PROV, ' ', 2, 0) +&#xA;eCIR.fnPadText(tmp.VIN_NBR, ' ', 17, 0) +&#xA;case isnull(tmp.ESTIMATED_DAMAGE, -1)&#xA;when -1 then eCIR.fnPadText(' ', ' ', 9, 0)&#xA;else eCIR.fnPadNumber(tmp.ESTIMATED_DAMAGE, '0', 9, 1) end +&#xA;case isnull(tmp.WRITEOFF_FLAG, -1)&#xA;when -1 then ' '&#xA;when 1 then 'Y' else ' ' end +&#xA;isnull(tmp.DAMAGE_STICKER, ' ') +&#xA;eCIR.fnGetPartyBasic(tmp.OWNED_BY_ID)+&#xA;eCIR.fnGetInsuredBy(tmp.INSURED_BY_ID) +&#xA;case isnull(tmp.DG_PIN, -1)&#xA;when -1 then '    ' else eCIR.fnPadText(tmp.DG_PIN, '0', 4, 1) end +&#xA;case isnull(VEHICLE_SPL_STUDY, '^')&#xA;when '^' then '  ' else eCIR.fnPadText(left(tmp.VEHICLE_SPL_STUDY,2), ' ', 2, 0) end&#xA;from&#xA;(select&#xA;distinct&#xA;obj.ID,&#xA;col.CASE_YEAR,&#xA;col.CASE_NBR,&#xA;obj.SEQ_NBR,&#xA;obj.PARENT_OBJECT_ID,&#xA;ot.CODE,&#xA;ot.SHORT_DESC,&#xA;obj.PARTY_ID,&#xA;obj.PROPERTY_ID, &#xA;null as party_prop_id,&#xA;ctv.SHORT_DESC as obj_type,&#xA;prop.YEAR,&#xA;prop.MAKE,&#xA;prop.MODEL,&#xA;prop.COLOR,&#xA;prop.LICENCE_PLATE_NBR,&#xA;prop.LIC_PLATE_PROV,&#xA;prop.VIN_NBR,&#xA;prop.ESTIMATED_DAMAGE,&#xA;prop.WRITEOFF_FLAG,&#xA;prop.DAMAGE_STICKER,&#xA;prop.OWNED_BY_ID,&#xA;prop.INSURED_BY_ID,&#xA;prop.DG_PIN,&#xA;prop.VEHICLE_SPL_STUDY,&#xA;null as OPERATED_PROPERTY_ID&#xA;from ecrdba.cl_objects obj&#xA;left outer join ECRDBA.CLOBJ_PROPERTY_INFO prop on obj.PROPERTY_ID = prop.ID&#xA;left outer join ecrdba.CODE_TYPE_VALUES ctv on prop.OBJECT_IDENTIFICATION_TYPE_ID = ctv.ID,&#xA;ecrdba.collisions col,&#xA;ecrdba.OBJECT_TYPES ot,&#xA;ecir.ci_current_flatfile_year ff&#xA;where ff.YearId = 1 and ff.InProgressFlag = 1&#xA;and col.CASE_YEAR = ff.FlatfileYear&#xA;and obj.COLLISION_ID = col.ID&#xA;and obj.PARENT_OBJECT_ID is null&#xA;and obj.PROPERTY_ID is not null&#xA;and obj.OBJECT_TYPE_ID = ot.ID&#xA;union --all&#xA;-- Union for when case_year &gt; 2014 (non historical records)&#xA;select&#xA;distinct&#xA;obj.id,&#xA;col.CASE_YEAR,&#xA;col.CASE_NBR,&#xA;obj.SEQ_NBR,&#xA;obj.PARENT_OBJECT_ID,&#xA;ot.CODE,&#xA;ot.SHORT_DESC,&#xA;obj.PARTY_ID,&#xA;obj.PROPERTY_ID,&#xA;party.OPERATED_PROPERTY_ID as party_prop_id,&#xA;ctv.SHORT_DESC as obj_type,&#xA;prop.YEAR,&#xA;prop.MAKE,&#xA;prop.MODEL,&#xA;prop.COLOR,&#xA;prop.LICENCE_PLATE_NBR,&#xA;prop.LIC_PLATE_PROV,&#xA;prop.VIN_NBR,&#xA;prop.ESTIMATED_DAMAGE,&#xA;prop.WRITEOFF_FLAG,&#xA;prop.DAMAGE_STICKER,&#xA;prop.OWNED_BY_ID,&#xA;prop.INSURED_BY_ID,&#xA;prop.DG_PIN,&#xA;prop.VEHICLE_SPL_STUDY,&#xA;party.OPERATED_PROPERTY_ID&#xA;from ecrdba.cl_objects obj&#xA;left outer join ecrdba.CLOBJ_PARTY_INFO party on (obj.PARTY_ID = party.ID and obj.PARENT_OBJECT_ID is null)&#xA;-- We need only prop records that truly have vehicle data in them, some exist &#xA;-- to capture object level data from pedestrian/driver file&#xA;left outer join ECRDBA.CLOBJ_PROPERTY_INFO prop on (party.OPERATED_PROPERTY_ID = prop.ID &#xA;and (prop.MAKE is not null or prop.DAMAGE_STICKER is not null or prop.OWNED_BY_ID is not null))&#xA;left outer join ecrdba.CODE_TYPE_VALUES ctv on prop.OBJECT_IDENTIFICATION_TYPE_ID = ctv.ID,&#xA;ecrdba.collisions col,&#xA;ecrdba.OBJECT_TYPES ot,&#xA;ecir.ci_current_flatfile_year ff&#xA;where ff.YearId = 1 and ff.InProgressFlag = 1&#xA;and col.CASE_YEAR = ff.FlatfileYear&#xA;and col.CASE_YEAR &gt; ((select numvalue from ECRDBA.GENERAL_TABLE where [TYPE]='etlYear')-1)&#xA;and obj.COLLISION_ID = col.ID&#xA;and obj.OBJECT_TYPE_ID = ot.ID&#xA;union&#xA;-- Union for when case_year &lt; 2015 (historical records)&#xA;select&#xA;distinct&#xA;obj.id,&#xA;col.CASE_YEAR,&#xA;col.CASE_NBR,&#xA;obj.SEQ_NBR,&#xA;obj.PARENT_OBJECT_ID,&#xA;ot.CODE,&#xA;ot.SHORT_DESC,&#xA;obj.PARTY_ID,&#xA;obj.PROPERTY_ID,&#xA;party.OPERATED_PROPERTY_ID as party_prop_id,&#xA;ctv.SHORT_DESC as obj_type,&#xA;prop.YEAR,&#xA;prop.MAKE,&#xA;prop.MODEL,&#xA;prop.COLOR,&#xA;prop.LICENCE_PLATE_NBR,&#xA;prop.LIC_PLATE_PROV,&#xA;prop.VIN_NBR,&#xA;prop.ESTIMATED_DAMAGE,&#xA;prop.WRITEOFF_FLAG,&#xA;prop.DAMAGE_STICKER,&#xA;prop.OWNED_BY_ID,&#xA;prop.INSURED_BY_ID,&#xA;prop.DG_PIN,&#xA;prop.VEHICLE_SPL_STUDY,&#xA;party.OPERATED_PROPERTY_ID&#xA;FROM ecrdba.cl_objects obj,&#xA;ecrdba.collisions col,&#xA;ECRDBA.CLOBJ_PROPERTY_INFO prop,&#xA;ecrdba.CLOBJ_PARTY_INFO party,&#xA;ecrdba.CODE_TYPE_VALUES ctv,&#xA;ecrdba.OBJECT_TYPES ot,&#xA;ecir.ci_current_flatfile_year ff&#xA;where ff.YearId = 1 and ff.InProgressFlag = 1&#xA;and col.CASE_YEAR = ff.FlatfileYear&#xA;and col.case_year &lt; (select numvalue from ECRDBA.GENERAL_TABLE where [TYPE]='etlYear')&#xA;AND obj.COLLISION_ID = col.ID&#xA;AND obj.PARTY_ID = party.ID&#xA;AND obj.PARENT_OBJECT_ID IS NULL&#xA;AND party.OPERATED_PROPERTY_ID = prop.ID&#xA;-- We need only prop records that truly have vehicle data in them, some exist&#xA;-- to capture object level data from pedestrian/driver file&#xA;AND (prop.MAKE IS NOT NULL OR prop.DAMAGE_STICKER IS NOT NULL OR prop.OWNED_BY_ID IS NOT NULL)&#xA;AND prop.OBJECT_IDENTIFICATION_TYPE_ID = ctv.ID&#xA;AND obj.OBJECT_TYPE_ID = ot.ID&#xA;) as tmp&#xA;where (tmp.code in ('01','03', '04','08') or tmp.OPERATED_PROPERTY_ID is not null or tmp.OWNED_BY_ID is not null or tmp.INSURED_BY_ID is not null)&#xA;and (tmp.CASE_YEAR &lt; (select numvalue from ECRDBA.GENERAL_TABLE where [TYPE]='etlYear') or (tmp.CASE_YEAR &gt; ((select numvalue from ECRDBA.GENERAL_TABLE where [TYPE]='etlYear')-1) and tmp.code &lt;&gt; '04'))&#xA;order by tmp.CASE_NBR, eCIR.fnGetACISSequence(tmp.CASE_YEAR, tmp.SEQ_NBR, tmp.PARENT_OBJECT_ID)&#xA;--tmp.id desc&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Sequence Container\GenerateVehicle Extract\Update FLAT_FILES_REPO entry as Complete"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{1a318814-2de6-4d8d-add3-10e535fb6a0e}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Update FLAT_FILES_REPO entry as Complete"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="1">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{67DF6BBB-0440-40D8-A8AB-57E8A7F0CBF4}"
                  SQLTask:SqlStatementSource="update eCIR.flat_files_repo&#xA;set status='Complete'&#xA;where year=@useReportYear and fileversion=@useNewFileVersion&#xA;and type='VehicleExtract'" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="@useReportYear"
                    SQLTask:DtsVariableName="User::ReportYear"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="11"
                    SQLTask:ParameterSize="4" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="@useNewFileVersion"
                    SQLTask:DtsVariableName="User::NewFileVersion"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="11"
                    SQLTask:ParameterSize="4" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
            <DTS:Executable
              DTS:refId="Package\Sequence Container\GenerateVehicle Extract\Update FLAT_FILES_REPO entry as Failed"
              DTS:CreationName="Microsoft.ExecuteSQLTask"
              DTS:Description="Execute SQL Task"
              DTS:DTSID="{4efb301a-b46c-4fb6-b50d-1d1fa1e64d6a}"
              DTS:ExecutableType="Microsoft.ExecuteSQLTask"
              DTS:LocaleID="-1"
              DTS:ObjectName="Update FLAT_FILES_REPO entry as Failed"
              DTS:TaskContact="Execute SQL Task; Microsoft Corporation; Microsoft SQL Server 2008 R2; © 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
              DTS:ThreadHint="0">
              <DTS:Variables />
              <DTS:ObjectData>
                <SQLTask:SqlTaskData
                  SQLTask:Connection="{67DF6BBB-0440-40D8-A8AB-57E8A7F0CBF4}"
                  SQLTask:SqlStatementSource="update eCIR.flat_files_repo&#xA;set status='Failed'&#xA;where year=@useReportYear and fileversion=@useNewFileVersion&#xA;and type='VehicleExtract'" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="useReportYear"
                    SQLTask:DtsVariableName="User::ReportYear"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="11"
                    SQLTask:ParameterSize="4" />
                  <SQLTask:ParameterBinding
                    SQLTask:ParameterName="useNewFileVersion"
                    SQLTask:DtsVariableName="User::NewFileVersion"
                    SQLTask:ParameterDirection="Input"
                    SQLTask:DataType="11"
                    SQLTask:ParameterSize="4" />
                </SQLTask:SqlTaskData>
              </DTS:ObjectData>
            </DTS:Executable>
          </DTS:Executables>
          <DTS:PrecedenceConstraints>
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Sequence Container\GenerateVehicle Extract.PrecedenceConstraints[Constraint]"
              DTS:CreationName=""
              DTS:DTSID="{7a0b7794-e786-48ab-9f67-2ad3959d8854}"
              DTS:From="Package\Sequence Container\GenerateVehicle Extract\Insert flat file records into flat file content table 4"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint"
              DTS:To="Package\Sequence Container\GenerateVehicle Extract\Update FLAT_FILES_REPO entry as Complete" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Sequence Container\GenerateVehicle Extract.PrecedenceConstraints[Constraint 1]"
              DTS:CreationName=""
              DTS:DTSID="{72ea2975-d2d5-4b5d-8d23-bceeb908fa40}"
              DTS:From="Package\Sequence Container\GenerateVehicle Extract\Get flatFileId"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 1"
              DTS:To="Package\Sequence Container\GenerateVehicle Extract\Insert flat file records into flat file content table 4" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Sequence Container\GenerateVehicle Extract.PrecedenceConstraints[Constraint 2]"
              DTS:CreationName=""
              DTS:DTSID="{503A6ED7-F8A9-43B6-9D0F-F766D3D623F1}"
              DTS:From="Package\Sequence Container\GenerateVehicle Extract\Insert flat file records into flat file content table 4"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 2"
              DTS:To="Package\Sequence Container\GenerateVehicle Extract\Update FLAT_FILES_REPO entry as Failed"
              DTS:Value="1" />
            <DTS:PrecedenceConstraint
              DTS:refId="Package\Sequence Container\GenerateVehicle Extract.PrecedenceConstraints[Constraint 3]"
              DTS:CreationName=""
              DTS:DTSID="{cb8c1470-f7f5-4839-8f11-df37b35e033e}"
              DTS:From="Package\Sequence Container\GenerateVehicle Extract\Generate FLAT_FILES_REPO entry"
              DTS:LogicalAnd="True"
              DTS:ObjectName="Constraint 3"
              DTS:To="Package\Sequence Container\GenerateVehicle Extract\Get flatFileId" />
          </DTS:PrecedenceConstraints>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Sequence Container.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{e89f1c0b-1a3e-4c2f-8c84-9abb73d8c9b1}"
          DTS:From="Package\Sequence Container\Determine what the year is we need to generate for"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Sequence Container\Generate Collision Extract" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Sequence Container.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{667b43c4-4d16-4300-a20e-4203779ec574}"
          DTS:From="Package\Sequence Container\Generate Collision Extract"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Sequence Container\Generate AllInvolved Extract" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Sequence Container.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{4979a2d0-c06e-4a24-bf14-7ac089398210}"
          DTS:From="Package\Sequence Container\Generate Pedestrian Driver Extract"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\Sequence Container\GenerateVehicle Extract" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Sequence Container.PrecedenceConstraints[Constraint 3]"
          DTS:CreationName=""
          DTS:DTSID="{d14016ff-e031-4e0b-87ce-366d3eb22c9e}"
          DTS:From="Package\Sequence Container\GenerateVehicle Extract"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 3"
          DTS:To="Package\Sequence Container\Generate Witness Extract 1" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Sequence Container.PrecedenceConstraints[Constraint 4]"
          DTS:CreationName=""
          DTS:DTSID="{edb433c0-12bb-471b-bdb5-5ba0992a0c14}"
          DTS:From="Package\Sequence Container\Generate Witness Extract 1"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 4"
          DTS:To="Package\Sequence Container\Generate Collision Description Extract" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Sequence Container.PrecedenceConstraints[Constraint 5]"
          DTS:CreationName=""
          DTS:DTSID="{fc7d876f-96df-4edc-a3d4-9b35c183fd3a}"
          DTS:From="Package\Sequence Container\Generate Collision Description Extract"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 5"
          DTS:To="Package\Sequence Container\Generate Collision Information" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Sequence Container.PrecedenceConstraints[Constraint 6]"
          DTS:CreationName=""
          DTS:DTSID="{6e59d265-74d4-4dcc-86e6-dd0d344574ae}"
          DTS:From="Package\Sequence Container\Generate AllInvolved Extract"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 6"
          DTS:To="Package\Sequence Container\Generate Pedestrian Driver Extract" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Sequence Container.PrecedenceConstraints[Constraint 7]"
          DTS:CreationName=""
          DTS:DTSID="{a30f355f-180a-4489-9c11-a6ea6e2d1692}"
          DTS:From="Package\Sequence Container\Generate Collision Information"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 7"
          DTS:To="Package\Sequence Container\Generate Object Involved" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Sequence Container.PrecedenceConstraints[Constraint 8]"
          DTS:CreationName=""
          DTS:DTSID="{73c7af79-3911-49ba-8c80-8c0af95c8063}"
          DTS:From="Package\Sequence Container\Generate Object Involved"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 8"
          DTS:To="Package\Sequence Container\Generate All Involved Description" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Sequence Container.PrecedenceConstraints[Constraint 9]"
          DTS:CreationName=""
          DTS:DTSID="{5F5321EB-F19E-491C-B77A-0C99FBFADC5E}"
          DTS:From="Package\Sequence Container\Generate All Involved Description"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 9"
          DTS:To="Package\Sequence Container\Flat Files done" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{7E143015-0B75-43F1-9F0A-CABD52C40372}"
      DTS:From="Package\Sequence Container"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Flat Files done, but with error"
      DTS:Value="1" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="128" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="288,42"
          Id="Package\Flat Files done, but with error\Get next file version number for flat file year"
          TopLeft="44.0188679245284,33.0943396226414" />
        <ContainerLayout
          HeaderHeight="43.924528301886795"
          IsExpanded="True"
          PanelSize="380,127"
          Size="380,171"
          Id="Package\Flat Files done, but with error"
          TopLeft="1481.22327044025,1628.79559748428" />
        <NodeLayout
          Size="200,42"
          Id="Package\Sequence Container\Determine what the year is we need to generate for\Get Flat File year value"
          TopLeft="69.5366876310271,22.3291404612158" />
        <NodeLayout
          Size="301,42"
          Id="Package\Sequence Container\Determine what the year is we need to generate for\Get next file version number for flat file year"
          TopLeft="17.1530398322849,116.794549266248" />
        <EdgeLayout
          Id="Package\Sequence Container\Determine what the year is we need to generate for.PrecedenceConstraints[Constraint]"
          TopLeft="168.594863731656,64.3291404612158">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,52.465408805032"
              Start="0,0"
              End="0,44.965408805032">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,44.965408805032" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="338,214"
          Size="338,257"
          Id="Package\Sequence Container\Determine what the year is we need to generate for"
          TopLeft="37.833333333333,158.758909853249" />
        <NodeLayout
          Size="298,42"
          Id="Package\Sequence Container\Flat Files done\Get next file version number for flat file year"
          TopLeft="34.0188679245284,15.0943396226414" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="365,86"
          Size="365,129"
          Id="Package\Sequence Container\Flat Files done"
          TopLeft="1276.67295597484,885.38364779874" />
        <NodeLayout
          Size="250,42"
          Id="Package\Sequence Container\Generate All Involved Description\Generate FLAT_FILES_REPO entry"
          TopLeft="48.5471698113206,12.5471698113208" />
        <NodeLayout
          Size="188,42"
          Id="Package\Sequence Container\Generate All Involved Description\Get flatFileId"
          TopLeft="83.867924528302,101.547169811321" />
        <NodeLayout
          Size="316,42"
          Id="Package\Sequence Container\Generate All Involved Description\Insert flat file records into flat file content table"
          TopLeft="29.6792452830186,191.792452830189" />
        <NodeLayout
          Size="307,42"
          Id="Package\Sequence Container\Generate All Involved Description\Update FLAT_FILES_REPO entry as Complete"
          TopLeft="32.6415094339627,282.490566037736" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="367,392"
          Size="367,435"
          Id="Package\Sequence Container\Generate All Involved Description"
          TopLeft="1903.1320754717,724.666666666667" />
        <NodeLayout
          Size="243,42"
          Id="Package\Sequence Container\Generate AllInvolved Extract\Generate FLAT_FILES_REPO entry"
          TopLeft="36.9056603773583,11.5849056603772" />
        <NodeLayout
          Size="142,42"
          Id="Package\Sequence Container\Generate AllInvolved Extract\Get flatFileId"
          TopLeft="94.2264150943397,89.5849056603772" />
        <NodeLayout
          Size="312,42"
          Id="Package\Sequence Container\Generate AllInvolved Extract\Insert flat file records into flat file content table 2"
          TopLeft="18.0377358490564,173.830188679245" />
        <NodeLayout
          Size="168,49"
          Id="Package\Sequence Container\Generate AllInvolved Extract\Update FLAT_FILES_REPO entry as Complete"
          TopLeft="17.1132075471696,277.471698113207" />
        <NodeLayout
          Size="276,42"
          Id="Package\Sequence Container\Generate AllInvolved Extract\Update FLAT_FILES_REPO entry as Failed"
          TopLeft="67.4528301886794,354.339622641509" />
        <EdgeLayout
          Id="Package\Sequence Container\Generate AllInvolved Extract.PrecedenceConstraints[Constraint]"
          TopLeft="165.22641509434,131.584905660377">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="8.81132075471669,42.2452830188679"
              Start="0,0"
              End="8.81132075471669,34.7452830188679">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,17.1226415094339" />
                  <mssgle:CubicBezierSegment
                    Point1="0,17.1226415094339"
                    Point2="0,21.1226415094339"
                    Point3="4,21.1226415094339" />
                  <mssgle:LineSegment
                    End="4.81132075471669,21.1226415094339" />
                  <mssgle:CubicBezierSegment
                    Point1="4.81132075471669,21.1226415094339"
                    Point2="8.81132075471669,21.1226415094339"
                    Point3="8.81132075471669,25.1226415094339" />
                  <mssgle:LineSegment
                    End="8.81132075471669,34.7452830188679" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container\Generate AllInvolved Extract.PrecedenceConstraints[Constraint 1]"
          TopLeft="123.37106918239,215.830188679245">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-22.2578616352201,61.6415094339623"
              Start="0,0"
              End="-22.2578616352201,54.1415094339623">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.8453022718521" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.8453022718521"
                    Point2="0,24.8453022718521"
                    Point3="-4,24.8453022718521" />
                  <mssgle:LineSegment
                    End="-18.2578616352201,24.8453022718521" />
                  <mssgle:CubicBezierSegment
                    Point1="-18.2578616352201,24.8453022718521"
                    Point2="-22.2578616352201,24.8453022718521"
                    Point3="-22.2578616352201,28.8453022718521" />
                  <mssgle:LineSegment
                    End="-22.2578616352201,54.1415094339623" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container\Generate AllInvolved Extract.PrecedenceConstraints[Constraint 2]"
          TopLeft="224.704402515723,215.830188679245">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-19.2515723270436,138.509433962264"
              Start="0,0"
              End="-19.2515723270436,131.009433962264">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,51.8277820562187" />
                  <mssgle:CubicBezierSegment
                    Point1="0,51.8277820562187"
                    Point2="0,55.8277820562187"
                    Point3="-4,55.8277820562187" />
                  <mssgle:LineSegment
                    End="-15.2515723270436,55.8277820562187" />
                  <mssgle:CubicBezierSegment
                    Point1="-15.2515723270436,55.8277820562187"
                    Point2="-19.2515723270436,55.8277820562187"
                    Point3="-19.2515723270436,59.8277820562187" />
                  <mssgle:LineSegment
                    End="-19.2515723270436,131.009433962264" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-24.8671338197718,60.8277820562187,30.4826953125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container\Generate AllInvolved Extract.PrecedenceConstraints[Constraint 3]"
          TopLeft="161.816037735849,53.5849056603772">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,36"
              Start="0,0"
              End="0,28.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,28.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="355,424"
          Size="355,467"
          Id="Package\Sequence Container\Generate AllInvolved Extract"
          TopLeft="959.40880503145,52.25786163522" />
        <NodeLayout
          Size="247,42"
          Id="Package\Sequence Container\Generate Collision Description Extract\Generate FLAT_FILES_REPO entry"
          TopLeft="60.7924528301883,8.52830188679241" />
        <NodeLayout
          Size="156,42"
          Id="Package\Sequence Container\Generate Collision Description Extract\Get flatFileId"
          TopLeft="112.11320754717,82.5283018867924" />
        <NodeLayout
          Size="326,42"
          Id="Package\Sequence Container\Generate Collision Description Extract\Insert flat file records into flat file content table 6"
          TopLeft="25.9056603773583,160.754716981132" />
        <NodeLayout
          Size="175,51"
          Id="Package\Sequence Container\Generate Collision Description Extract\Update FLAT_FILES_REPO entry as Complete"
          TopLeft="23.0377358490568,247.377358490566" />
        <NodeLayout
          Size="283,42"
          Id="Package\Sequence Container\Generate Collision Description Extract\Update FLAT_FILES_REPO entry as Failed"
          TopLeft="81.2452830188677,340.792452830189" />
        <EdgeLayout
          Id="Package\Sequence Container\Generate Collision Description Extract.PrecedenceConstraints[Constraint]"
          TopLeft="135.905660377358,202.754716981132">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-25.3679245283015,44.6226415094338"
              Start="0,0"
              End="-25.3679245283015,37.1226415094338">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,13.9798189232151" />
                  <mssgle:CubicBezierSegment
                    Point1="0,13.9798189232151"
                    Point2="0,17.9798189232151"
                    Point3="-4,17.9798189232151" />
                  <mssgle:LineSegment
                    End="-21.3679245283015,17.9798189232151" />
                  <mssgle:CubicBezierSegment
                    Point1="-21.3679245283015,17.9798189232151"
                    Point2="-25.3679245283015,17.9798189232151"
                    Point3="-25.3679245283015,21.9798189232151" />
                  <mssgle:LineSegment
                    End="-25.3679245283015,37.1226415094338" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container\Generate Collision Description Extract.PrecedenceConstraints[Constraint 1]"
          TopLeft="189.509433962264,124.528301886792">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,36.2264150943397"
              Start="0,0"
              End="0,28.7264150943397">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,28.7264150943397" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container\Generate Collision Description Extract.PrecedenceConstraints[Constraint 2]"
          TopLeft="241.905660377358,202.754716981132">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-19.1603773584907,138.037735849057"
              Start="0,0"
              End="-19.1603773584907,130.537735849057">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,51.6196005252609" />
                  <mssgle:CubicBezierSegment
                    Point1="0,51.6196005252609"
                    Point2="0,55.6196005252609"
                    Point3="-4,55.6196005252609" />
                  <mssgle:LineSegment
                    End="-15.1603773584907,55.6196005252609" />
                  <mssgle:CubicBezierSegment
                    Point1="-15.1603773584907,55.6196005252609"
                    Point2="-19.1603773584907,55.6196005252609"
                    Point3="-19.1603773584907,59.6196005252609" />
                  <mssgle:LineSegment
                    End="-19.1603773584907,130.537735849057" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-24.8215363354953,60.6196005252609,30.4826953125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container\Generate Collision Description Extract.PrecedenceConstraints[Constraint 3]"
          TopLeft="187.202830188679,50.5283018867924">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,32"
              Start="0,0"
              End="0,24.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,24.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="382,438"
          Size="382,481"
          Id="Package\Sequence Container\Generate Collision Description Extract"
          TopLeft="2848.88050314465,54.635220125786" />
        <NodeLayout
          Size="257,44"
          Id="Package\Sequence Container\Generate Collision Extract\Generate FLAT_FILES_REPO entry"
          TopLeft="50.0943396226417,12.6037735849056" />
        <NodeLayout
          Size="140,42"
          Id="Package\Sequence Container\Generate Collision Extract\Get flatFileId"
          TopLeft="105.415094339623,89.6037735849056" />
        <NodeLayout
          Size="328,42"
          Id="Package\Sequence Container\Generate Collision Extract\Insert flat file records into flat file content table 1"
          TopLeft="18.8867924528304,172.22641509434" />
        <NodeLayout
          Size="167,53"
          Id="Package\Sequence Container\Generate Collision Extract\Update FLAT_FILES_REPO entry as Complete"
          TopLeft="24.566037735849,276.849056603774" />
        <NodeLayout
          Size="281,42"
          Id="Package\Sequence Container\Generate Collision Extract\Update FLAT_FILES_REPO entry as Failed"
          TopLeft="86.4528301886794,355.584905660377" />
        <EdgeLayout
          Id="Package\Sequence Container\Generate Collision Extract.PrecedenceConstraints[Constraint]"
          TopLeft="129.553459119497,214.22641509434">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-21.487421383648,62.6226415094341"
              Start="0,0"
              End="-21.487421383648,55.1226415094341">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.231452647005" />
                  <mssgle:CubicBezierSegment
                    Point1="0,21.231452647005"
                    Point2="0,25.231452647005"
                    Point3="-4,25.231452647005" />
                  <mssgle:LineSegment
                    End="-17.487421383648,25.231452647005" />
                  <mssgle:CubicBezierSegment
                    Point1="-17.487421383648,25.231452647005"
                    Point2="-21.487421383648,25.231452647005"
                    Point3="-21.487421383648,29.231452647005" />
                  <mssgle:LineSegment
                    End="-21.487421383648,55.1226415094341" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container\Generate Collision Extract.PrecedenceConstraints[Constraint 1]"
          TopLeft="179.150943396226,131.603773584906">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,40.6226415094341"
              Start="0,0"
              End="0,33.1226415094341">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,33.1226415094341" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container\Generate Collision Extract.PrecedenceConstraints[Constraint 2]"
          TopLeft="236.220125786164,214.22641509434">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-9.26729559748424,141.358490566038"
              Start="0,0"
              End="-9.26729559748424,133.858490566038">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.9551199853453" />
                  <mssgle:CubicBezierSegment
                    Point1="0,52.9551199853453"
                    Point2="0,56.9551199853453"
                    Point3="-4,56.9551199853453" />
                  <mssgle:LineSegment
                    End="-5.26729559748424,56.9551199853453" />
                  <mssgle:CubicBezierSegment
                    Point1="-5.26729559748424,56.9551199853453"
                    Point2="-9.26729559748424,56.9551199853453"
                    Point3="-9.26729559748424,60.9551199853453" />
                  <mssgle:LineSegment
                    End="-9.26729559748424,133.858490566038" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-19.8749954549921,61.9551199853453,30.4826953125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container\Generate Collision Extract.PrecedenceConstraints[Constraint 3]"
          TopLeft="177.004716981132,56.6037735849056">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,33"
              Start="0,0"
              End="0,25.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="388,426"
          Size="388,469"
          Id="Package\Sequence Container\Generate Collision Extract"
          TopLeft="471.59748427673,49.729559748428" />
        <NodeLayout
          Size="247,44"
          Id="Package\Sequence Container\Generate Collision Information\Generate FLAT_FILES_REPO entry"
          TopLeft="46.5471698113206,19.5471698113208" />
        <NodeLayout
          Size="177,44"
          Id="Package\Sequence Container\Generate Collision Information\Get flatFileId"
          TopLeft="78.867924528302,101.547169811321" />
        <NodeLayout
          Size="312,44"
          Id="Package\Sequence Container\Generate Collision Information\Insert flat file records into flat file content table"
          TopLeft="22.6792452830186,200.792452830189" />
        <NodeLayout
          Size="302,44"
          Id="Package\Sequence Container\Generate Collision Information\Update FLAT_FILES_REPO entry as Complete"
          TopLeft="24.6415094339623,288.490566037736" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="352,387"
          Size="352,430"
          Id="Package\Sequence Container\Generate Collision Information"
          TopLeft="2864.52830188679,730.314465408805" />
        <NodeLayout
          Size="251,44"
          Id="Package\Sequence Container\Generate Object Involved\Generate FLAT_FILES_REPO entry"
          TopLeft="51.5471698113206,12.5471698113208" />
        <NodeLayout
          Size="146,42"
          Id="Package\Sequence Container\Generate Object Involved\Get flatFileId"
          TopLeft="108.867924528302,95.5471698113208" />
        <NodeLayout
          Size="302,44"
          Id="Package\Sequence Container\Generate Object Involved\Insert flat file records into flat file content table"
          TopLeft="23.6792452830186,187.792452830189" />
        <NodeLayout
          Size="300,42"
          Id="Package\Sequence Container\Generate Object Involved\Update FLAT_FILES_REPO entry as Complete"
          TopLeft="24.6415094339623,281.490566037736" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="346,384"
          Size="346,427"
          Id="Package\Sequence Container\Generate Object Involved"
          TopLeft="2372.79245283019,727.314465408805" />
        <NodeLayout
          Size="247,42"
          Id="Package\Sequence Container\Generate Pedestrian Driver Extract\Generate FLAT_FILES_REPO entry"
          TopLeft="58.132075471698,7.05660377358504" />
        <NodeLayout
          Size="150,42"
          Id="Package\Sequence Container\Generate Pedestrian Driver Extract\Get flatFileId"
          TopLeft="101.452830188679,82.0754716981132" />
        <NodeLayout
          Size="312,42"
          Id="Package\Sequence Container\Generate Pedestrian Driver Extract\Insert flat file records into flat file content table 3"
          TopLeft="22.2075471698113,158.301886792453" />
        <NodeLayout
          Size="169,57"
          Id="Package\Sequence Container\Generate Pedestrian Driver Extract\Update FLAT_FILES_REPO entry as Complete"
          TopLeft="18.3396226415093,257.924528301887" />
        <NodeLayout
          Size="283,42"
          Id="Package\Sequence Container\Generate Pedestrian Driver Extract\Update FLAT_FILES_REPO entry as Failed"
          TopLeft="60.7358490566039,336.169811320755" />
        <EdgeLayout
          Id="Package\Sequence Container\Generate Pedestrian Driver Extract.PrecedenceConstraints[Constraint]"
          TopLeft="127.540880503145,200.301886792453">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-24.7012578616353,57.6226415094338"
              Start="0,0"
              End="-24.7012578616353,50.1226415094338">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,19.2254524451289" />
                  <mssgle:CubicBezierSegment
                    Point1="0,19.2254524451289"
                    Point2="0,23.2254524451289"
                    Point3="-4,23.2254524451289" />
                  <mssgle:LineSegment
                    End="-20.7012578616353,23.2254524451289" />
                  <mssgle:CubicBezierSegment
                    Point1="-20.7012578616353,23.2254524451289"
                    Point2="-24.7012578616353,23.2254524451289"
                    Point3="-24.7012578616353,27.2254524451289" />
                  <mssgle:LineSegment
                    End="-24.7012578616353,50.1226415094338" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container\Generate Pedestrian Driver Extract.PrecedenceConstraints[Constraint 1]"
          TopLeft="177.330188679245,124.075471698113">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,34.2264150943397"
              Start="0,0"
              End="0,26.7264150943397">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26.7264150943397" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container\Generate Pedestrian Driver Extract.PrecedenceConstraints[Constraint 2]"
          TopLeft="228.874213836478,200.301886792453">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-26.638364779874,135.867924528302"
              Start="0,0"
              End="-26.638364779874,128.367924528302">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,50.7630920292646" />
                  <mssgle:CubicBezierSegment
                    Point1="0,50.7630920292646"
                    Point2="0,54.7630920292646"
                    Point3="-4,54.7630920292646" />
                  <mssgle:LineSegment
                    End="-22.638364779874,54.7630920292646" />
                  <mssgle:CubicBezierSegment
                    Point1="-22.638364779874,54.7630920292646"
                    Point2="-26.638364779874,54.7630920292646"
                    Point3="-26.638364779874,58.7630920292646" />
                  <mssgle:LineSegment
                    End="-26.638364779874,128.367924528302" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-28.560530046187,59.7630920292646,30.4826953125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container\Generate Pedestrian Driver Extract.PrecedenceConstraints[Constraint 3]"
          TopLeft="179.042452830189,49.056603773585">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,33.0188679245282"
              Start="0,0"
              End="0,25.5188679245282">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.5188679245282" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="363,421"
          Size="363,464"
          Id="Package\Sequence Container\Generate Pedestrian Driver Extract"
          TopLeft="1424.46540880503,55.088050314465" />
        <NodeLayout
          Size="246,44"
          Id="Package\Sequence Container\Generate Witness Extract 1\Generate FLAT_FILES_REPO entry"
          TopLeft="47.9245283018872,5.26415094339632" />
        <NodeLayout
          Size="159,42"
          Id="Package\Sequence Container\Generate Witness Extract 1\Get flatFileId"
          TopLeft="88.2452830188681,78.2641509433963" />
        <NodeLayout
          Size="314,44"
          Id="Package\Sequence Container\Generate Witness Extract 1\Insert flat file records into flat file content table 5"
          TopLeft="18.0377358490568,159.490566037736" />
        <NodeLayout
          Size="168,60"
          Id="Package\Sequence Container\Generate Witness Extract 1\Update FLAT_FILES_REPO entry as Complete"
          TopLeft="12.0754716981132,252.150943396226" />
        <NodeLayout
          Size="276,42"
          Id="Package\Sequence Container\Generate Witness Extract 1\Update FLAT_FILES_REPO entry as Failed"
          TopLeft="64.5849056603774,344.584905660377" />
        <EdgeLayout
          Id="Package\Sequence Container\Generate Witness Extract 1.PrecedenceConstraints[Constraint]"
          TopLeft="124.037735849057,203.490566037736">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-27.9622641509436,48.6603773584907"
              Start="0,0"
              End="-27.9622641509436,41.1603773584907">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,15.6121673003803" />
                  <mssgle:CubicBezierSegment
                    Point1="0,15.6121673003803"
                    Point2="0,19.6121673003803"
                    Point3="-4,19.6121673003803" />
                  <mssgle:LineSegment
                    End="-23.9622641509436,19.6121673003803" />
                  <mssgle:CubicBezierSegment
                    Point1="-23.9622641509436,19.6121673003803"
                    Point2="-27.9622641509436,19.6121673003803"
                    Point3="-27.9622641509436,23.6121673003803" />
                  <mssgle:LineSegment
                    End="-27.9622641509436,41.1603773584907" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container\Generate Witness Extract 1.PrecedenceConstraints[Constraint 1]"
          TopLeft="171.391509433962,120.264150943396">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,39.2264150943397"
              Start="0,0"
              End="0,31.7264150943397">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.7264150943397" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container\Generate Witness Extract 1.PrecedenceConstraints[Constraint 2]"
          TopLeft="226.037735849057,203.490566037736">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-23.4528301886794,141.094339622642"
              Start="0,0"
              End="-23.4528301886794,133.594339622642">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.8669201520913" />
                  <mssgle:CubicBezierSegment
                    Point1="0,52.8669201520913"
                    Point2="0,56.8669201520913"
                    Point3="-4,56.8669201520913" />
                  <mssgle:LineSegment
                    End="-19.4528301886794,56.8669201520913" />
                  <mssgle:CubicBezierSegment
                    Point1="-19.4528301886794,56.8669201520913"
                    Point2="-23.4528301886794,56.8669201520913"
                    Point3="-23.4528301886794,60.8669201520913" />
                  <mssgle:LineSegment
                    End="-23.4528301886794,133.594339622642" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-26.9677627505897,61.8669201520913,30.4826953125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container\Generate Witness Extract 1.PrecedenceConstraints[Constraint 3]"
          TopLeft="169.334905660378,49.2641509433963">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,29"
              Start="0,0"
              End="0,21.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="353,442"
          Size="353,485"
          Id="Package\Sequence Container\Generate Witness Extract 1"
          TopLeft="2381.4465408805,51.276729559749" />
        <NodeLayout
          Size="241,42"
          Id="Package\Sequence Container\GenerateVehicle Extract\Generate FLAT_FILES_REPO entry"
          TopLeft="72.3962264150941,10" />
        <NodeLayout
          Size="153,42"
          Id="Package\Sequence Container\GenerateVehicle Extract\Get flatFileId"
          TopLeft="114.716981132075,81" />
        <NodeLayout
          Size="313,42"
          Id="Package\Sequence Container\GenerateVehicle Extract\Insert flat file records into flat file content table 4"
          TopLeft="38.5094339622642,155.22641509434" />
        <NodeLayout
          Size="167,72"
          Id="Package\Sequence Container\GenerateVehicle Extract\Update FLAT_FILES_REPO entry as Complete"
          TopLeft="26.5471698113206,241.867924528302" />
        <NodeLayout
          Size="280,42"
          Id="Package\Sequence Container\GenerateVehicle Extract\Update FLAT_FILES_REPO entry as Failed"
          TopLeft="73.8490566037735,335.396226415094" />
        <EdgeLayout
          Id="Package\Sequence Container\GenerateVehicle Extract.PrecedenceConstraints[Constraint]"
          TopLeft="144.176100628931,197.22641509434">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-34.1289308176103,44.6415094339623"
              Start="0,0"
              End="-34.1289308176103,37.1415094339623">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,13.992827070014" />
                  <mssgle:CubicBezierSegment
                    Point1="0,13.992827070014"
                    Point2="0,17.992827070014"
                    Point3="-4,17.992827070014" />
                  <mssgle:LineSegment
                    End="-30.1289308176103,17.992827070014" />
                  <mssgle:CubicBezierSegment
                    Point1="-30.1289308176103,17.992827070014"
                    Point2="-34.1289308176103,17.992827070014"
                    Point3="-34.1289308176103,21.992827070014" />
                  <mssgle:LineSegment
                    End="-34.1289308176103,37.1415094339623" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container\GenerateVehicle Extract.PrecedenceConstraints[Constraint 1]"
          TopLeft="193.11320754717,123">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,32.2264150943397"
              Start="0,0"
              End="0,24.7264150943397">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,24.7264150943397" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container\GenerateVehicle Extract.PrecedenceConstraints[Constraint 2]"
          TopLeft="245.842767295598,197.22641509434">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-31.993710691824,138.169811320755"
              Start="0,0"
              End="-31.993710691824,130.669811320755">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,51.6895488730823" />
                  <mssgle:CubicBezierSegment
                    Point1="0,51.6895488730823"
                    Point2="0,55.6895488730823"
                    Point3="-4,55.6895488730823" />
                  <mssgle:LineSegment
                    End="-27.993710691824,55.6895488730823" />
                  <mssgle:CubicBezierSegment
                    Point1="-27.993710691824,55.6895488730823"
                    Point2="-31.993710691824,55.6895488730823"
                    Point3="-31.993710691824,59.6895488730823" />
                  <mssgle:LineSegment
                    End="-31.993710691824,130.669811320755" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-31.238203002162,60.6895488730823,30.4826953125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container\GenerateVehicle Extract.PrecedenceConstraints[Constraint 3]"
          TopLeft="192.056603773585,52">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,29"
              Start="0,0"
              End="0,21.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="368,432"
          Size="368,475"
          Id="Package\Sequence Container\GenerateVehicle Extract"
          TopLeft="1896.12578616352,56.125786163522" />
        <EdgeLayout
          Id="Package\Sequence Container.PrecedenceConstraints[Constraint]"
          TopLeft="375.833333333333,285.744234800839">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="95.764150943397,0"
              Start="0,0"
              End="88.264150943397,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="88.264150943397,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container.PrecedenceConstraints[Constraint 1]"
          TopLeft="859.59748427673,284.993710691824">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="99.8113207547171,0"
              Start="0,0"
              End="92.3113207547171,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="92.3113207547171,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container.PrecedenceConstraints[Constraint 2]"
          TopLeft="1787.46540880503,286.606918238994">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="108.660377358491,0"
              Start="0,0"
              End="101.160377358491,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="101.160377358491,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container.PrecedenceConstraints[Constraint 3]"
          TopLeft="2264.12578616352,293.701257861636">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="117.32075471698,0"
              Start="0,0"
              End="109.82075471698,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="109.82075471698,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container.PrecedenceConstraints[Constraint 4]"
          TopLeft="2734.4465408805,294.455974842767">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="114.43396226415,0"
              Start="0,0"
              End="106.93396226415,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="106.93396226415,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container.PrecedenceConstraints[Constraint 5]"
          TopLeft="3040.20440251572,535.635220125786">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,194.679245283019"
              Start="0,0"
              End="0,187.179245283019">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,187.179245283019" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container.PrecedenceConstraints[Constraint 6]"
          TopLeft="1314.40880503145,286.422955974843">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="110.056603773585,0"
              Start="0,0"
              End="102.556603773585,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="102.556603773585,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container.PrecedenceConstraints[Constraint 7]"
          TopLeft="2864.52830188679,943.06446540881">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-145.735849056603,0"
              Start="0,0"
              End="-138.235849056603,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-138.235849056603,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container.PrecedenceConstraints[Constraint 8]"
          TopLeft="2372.79245283019,941.49056603774">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-102.66037735849,0"
              Start="0,0"
              End="-95.1603773584902,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-95.1603773584902,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Sequence Container.PrecedenceConstraints[Constraint 9]"
          TopLeft="1903.1320754717,946.0251572327">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-261.459119496856,0"
              Start="0,0"
              End="-253.959119496856,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-253.959119496856,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="3236,1341"
          Size="3236,1384"
          Id="Package\Sequence Container"
          TopLeft="59.1698113207653,35.8333333333333" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="1674.19654088051,1419.83333333333">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,208.962264150946"
              Start="0,0"
              End="0,201.462264150946">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,201.462264150946" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-15.24134765625,95.856620356723,30.4826953125,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>